{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accepted-applicants/accepted-applicants.component.css","webpack:///./src/app/accepted-applicants/accepted-applicants.component.html","webpack:///./src/app/accepted-applicants/accepted-applicants.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.material.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/applicantaccepted/applicantaccepted.component.css","webpack:///./src/app/applicantaccepted/applicantaccepted.component.html","webpack:///./src/app/applicantaccepted/applicantaccepted.component.ts","webpack:///./src/app/applicantdenied/applicantdenied.component.css","webpack:///./src/app/applicantdenied/applicantdenied.component.html","webpack:///./src/app/applicantdenied/applicantdenied.component.ts","webpack:///./src/app/archived-incidents/archived-incidents.component.css","webpack:///./src/app/archived-incidents/archived-incidents.component.html","webpack:///./src/app/archived-incidents/archived-incidents.component.ts","webpack:///./src/app/archivedialog/archivedialog.component.css","webpack:///./src/app/archivedialog/archivedialog.component.html","webpack:///./src/app/archivedialog/archivedialog.component.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/common/dataService.ts","webpack:///./src/app/common/incident.ts","webpack:///./src/app/common/report.ts","webpack:///./src/app/common/team.ts","webpack:///./src/app/common/user.ts","webpack:///./src/app/cop/cop.component.css","webpack:///./src/app/cop/cop.component.html","webpack:///./src/app/cop/cop.component.ts","webpack:///./src/app/create-incident/create-incident.component.css","webpack:///./src/app/create-incident/create-incident.component.html","webpack:///./src/app/create-incident/create-incident.component.ts","webpack:///./src/app/create-teams/create-teams.component.css","webpack:///./src/app/create-teams/create-teams.component.html","webpack:///./src/app/create-teams/create-teams.component.ts","webpack:///./src/app/createreport/createreport.component.css","webpack:///./src/app/createreport/createreport.component.html","webpack:///./src/app/createreport/createreport.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/incidentsuccessful/incidentsuccessful.component.css","webpack:///./src/app/incidentsuccessful/incidentsuccessful.component.html","webpack:///./src/app/incidentsuccessful/incidentsuccessful.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logindialog/logindialog.component.css","webpack:///./src/app/logindialog/logindialog.component.html","webpack:///./src/app/logindialog/logindialog.component.ts","webpack:///./src/app/my-dialog-component/my-dialog-component.component.css","webpack:///./src/app/my-dialog-component/my-dialog-component.component.html","webpack:///./src/app/my-dialog-component/my-dialog-component.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/rejected-applicants/rejected-applicants.component.css","webpack:///./src/app/rejected-applicants/rejected-applicants.component.html","webpack:///./src/app/rejected-applicants/rejected-applicants.component.ts","webpack:///./src/app/report-dialog/report-dialog.component.css","webpack:///./src/app/report-dialog/report-dialog.component.html","webpack:///./src/app/report-dialog/report-dialog.component.ts","webpack:///./src/app/report/report.component.css","webpack:///./src/app/report/report.component.html","webpack:///./src/app/report/report.component.ts","webpack:///./src/app/review-application/review-application.component.css","webpack:///./src/app/review-application/review-application.component.html","webpack:///./src/app/review-application/review-application.component.ts","webpack:///./src/app/team1-details/team1-details.component.css","webpack:///./src/app/team1-details/team1-details.component.html","webpack:///./src/app/team1-details/team1-details.component.ts","webpack:///./src/app/teamdelete/teamdelete.component.css","webpack:///./src/app/teamdelete/teamdelete.component.html","webpack:///./src/app/teamdelete/teamdelete.component.ts","webpack:///./src/app/teamdialog/teamdialog.component.css","webpack:///./src/app/teamdialog/teamdialog.component.html","webpack:///./src/app/teamdialog/teamdialog.component.ts","webpack:///./src/app/teams/teams.component.css","webpack:///./src/app/teams/teams.component.html","webpack:///./src/app/teams/teams.component.ts","webpack:///./src/app/update-team/update-team.component.css","webpack:///./src/app/update-team/update-team.component.html","webpack:///./src/app/update-team/update-team.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* Assigned to kishan */\\r\\n.container {\\r\\n    margin-top: 1em;\\r\\n  }\\r\\n.pageHeading {\\r\\n    margin: auto;\\r\\n  }\\r\\n.table-container {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      min-width: 300px;\\r\\n    }\\r\\n.filter-header {\\r\\n    min-height: 64px;\\r\\n    padding: 8px 24px 0;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 20px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n.table-header{\\r\\n    font-size: 22px;\\r\\n    color: black;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n.table-cell {\\r\\n    font-size: 15px;\\r\\n  }\\r\\n.buttons {\\r\\n    font-size: 1em;\\r\\n  }\\r\\n.button-row button {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n.title {\\r\\n    margin: auto;\\r\\n  }\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\na {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\na.mat-button{\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  \"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n  <span class=\\\"title mat-title\\\">\\r\\n    <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n  </span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n  <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n  <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n  <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n</mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for Review Applications -->\\r\\n<h1 class=\\\"pageHeading mat-display-1\\\">Accepted Applicants</h1>\\r\\n<hr>\\r\\n<button mat-raised-button color=\\\"warn\\\" routerLink = \\\"/reviewApplication\\\"><i class=\\\"fas fa-long-arrow-alt-left fa-3x\\\"></i></button>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"table-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"filter-header\\\">\\r\\n    <mat-form-field>\\r\\n      <!-- Filter provided to filter the table data -->\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- First Name Column -->\\r\\n    <ng-container matColumnDef=\\\"firstName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> First Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.firstName }} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Last Name Column -->\\r\\n    <ng-container matColumnDef=\\\"lastName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Last Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.lastName }} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Email </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.email}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Date of Birth Column -->\\r\\n    <ng-container matColumnDef=\\\"dob\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Date of Birth </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.dob}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- County Column -->\\r\\n    <ng-container matColumnDef=\\\"county\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> County </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.county}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Skills Column -->\\r\\n    <ng-container matColumnDef=\\\"skills\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Skills </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.skills}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click) = \\\"rowClicked(row)\\\"></mat-row>\\r\\n  </mat-table>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {MatTableDataSource, MatSort} from '@angular/material';\r\nimport { Applicant } from '../common/applicant';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { DataService } from '../common/dataService';\r\nimport { MatDialog} from '@angular/material';\r\nimport { AuthService } from './../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-accepted-applicants',\r\n  templateUrl: './accepted-applicants.component.html',\r\n  styleUrls: ['./accepted-applicants.component.css']\r\n})\r\nexport class AcceptedApplicantsComponent implements OnInit {\r\n\r\n  dialogResult = '';\r\n\r\n  applicants: Applicant[];\r\n  displayedColumns = ['firstName', 'lastName', 'email', 'county', 'skills'];\r\n  dataSource = new  MatTableDataSource<Applicant>(this.applicants);\r\n  selection = new SelectionModel<Applicant>(true, []);\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n\r\n  constructor(private dataService: DataService, public dialog: MatDialog,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getMembersList()\r\n      .subscribe((data) => {\r\n        this.applicants = data['data'];\r\n        this.dataSource = new MatTableDataSource<Applicant>(this.applicants);\r\n      });\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","// Assigned to Kishan\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CreateIncidentComponent } from './create-incident/create-incident.component';\r\nimport { CreateTeamsComponent } from './create-teams/create-teams.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ReviewApplicationComponent } from './review-application/review-application.component';\r\nimport { TeamsComponent } from './teams/teams.component';\r\nimport { Team1DetailsComponent } from './team1-details/team1-details.component';\r\nimport { UpdateTeamComponent } from './update-team/update-team.component';\r\nimport { ArchivedIncidentsComponent } from './archived-incidents/archived-incidents.component';\r\nimport { ReportComponent } from './report/report.component';\r\nimport { COPComponent } from './cop/cop.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AcceptedApplicantsComponent } from './accepted-applicants/accepted-applicants.component';\r\nimport { RejectedApplicantsComponent } from './rejected-applicants/rejected-applicants.component';\r\nimport { CreatereportComponent } from './createreport/createreport.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'createIncident', component: CreateIncidentComponent },\r\n  { path: 'createTeams/:incidentID', component: CreateTeamsComponent},\r\n  // { path: 'createTeamsByID/incidentID', component: CreateTeamsComponent},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'reviewApplication', component: ReviewApplicationComponent },\r\n  //{ path: 'teams', component: TeamsComponent },\r\n  { path: 'teamsById/:item.incidentID', component: TeamsComponent },\r\n  { path: 'team1Details/:item._id', component: Team1DetailsComponent },\r\n  { path: 'updateTeam/:item._id', component: UpdateTeamComponent },\r\n  { path: 'archivedIncidents', component: ArchivedIncidentsComponent },\r\n  { path: 'acceptedApplicants', component: AcceptedApplicantsComponent },\r\n  { path: 'rejectedApplicants', component: RejectedApplicantsComponent },\r\n  // { path: 'report', component: ReportComponent },\r\n  { path: 'reportById/:item.incidentID', component: ReportComponent },\r\n  { path: 'cop', component: COPComponent },\r\n  { path: '', redirectTo: '/login', pathMatch: 'full'},\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'createreport', component: CreatereportComponent },\r\n  { path: '**', redirectTo: ''}\r\n  // CreatereportComponent\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--\\r\\n    Assinged to Kishan\\r\\n -->\\r\\n<div>\\r\\n    <router-outlet></router-outlet>\\r\\n    <p></p>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CdkTableModule } from \"@angular/cdk/table\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatStepperModule, MatDatepickerModule, MatDialogModule, MatDividerModule, MatExpansionModule, MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatNativeDateModule, MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule, MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule } from \"@angular/material\";\r\n\r\n@NgModule({\r\n    exports: [\r\n      CdkTableModule,\r\n      MatAutocompleteModule,\r\n      MatButtonModule,\r\n      MatButtonToggleModule,\r\n      MatCardModule,\r\n      MatCheckboxModule,\r\n      MatChipsModule,\r\n      MatStepperModule,\r\n      MatDatepickerModule,\r\n      MatDialogModule,\r\n      MatDividerModule,\r\n      MatExpansionModule,\r\n      MatGridListModule,\r\n      MatIconModule,\r\n      MatInputModule,\r\n      MatListModule,\r\n      MatMenuModule,\r\n      MatNativeDateModule,\r\n      MatPaginatorModule,\r\n      MatProgressBarModule,\r\n      MatProgressSpinnerModule,\r\n      MatRadioModule,\r\n      MatRippleModule,\r\n      MatSelectModule,\r\n      MatSidenavModule,\r\n      MatSliderModule,\r\n      MatSlideToggleModule,\r\n      MatSnackBarModule,\r\n      MatSortModule,\r\n      MatTableModule,\r\n      MatTabsModule,\r\n      MatToolbarModule,\r\n      MatTooltipModule,\r\n      ReactiveFormsModule,\r\n    ],\r\n  })\r\n  export class Material {}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { CreateIncidentComponent } from './create-incident/create-incident.component';\r\nimport { ReviewApplicationComponent } from './review-application/review-application.component';\r\nimport { TeamsComponent } from './teams/teams.component';\r\nimport { CreateTeamsComponent } from './create-teams/create-teams.component';\r\n\r\n\r\nimport { Team1DetailsComponent } from './team1-details/team1-details.component';\r\n\r\nimport { ReportComponent } from './report/report.component';\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { ArchivedIncidentsComponent } from './archived-incidents/archived-incidents.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { COPComponent } from './cop/cop.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { MyDialogComponentComponent } from './my-dialog-component/my-dialog-component.component';\r\nimport { ApplicantacceptedComponent } from './applicantaccepted/applicantaccepted.component';\r\nimport { ApplicantdeniedComponent } from './applicantdenied/applicantdenied.component';\r\nimport { Material } from './app.material';\r\nimport { ReportDialogComponent } from './report-dialog/report-dialog.component';\r\nimport { ArchivedialogComponent } from './archivedialog/archivedialog.component';\r\nimport { TeamdialogComponent } from './teamdialog/teamdialog.component';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { UpdateTeamComponent } from './update-team/update-team.component';\r\nimport { TeamdeleteComponent } from './teamdelete/teamdelete.component';\r\nimport { LogindialogComponent } from './logindialog/logindialog.component';\r\nimport { AcceptedApplicantsComponent } from './accepted-applicants/accepted-applicants.component';\r\nimport { RejectedApplicantsComponent } from './rejected-applicants/rejected-applicants.component';\r\nimport { IncidentsuccessfulComponent } from './incidentsuccessful/incidentsuccessful.component';\r\nimport { CreatereportComponent } from './createreport/createreport.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    CreateIncidentComponent,\r\n    ReviewApplicationComponent,\r\n    TeamsComponent,\r\n    CreateTeamsComponent,\r\n    Team1DetailsComponent,\r\n    ArchivedIncidentsComponent,\r\n    COPComponent,\r\n    MyDialogComponentComponent,\r\n    ApplicantacceptedComponent,\r\n    ApplicantdeniedComponent,\r\n    ReportComponent,\r\n    ReportDialogComponent,\r\n    ArchivedialogComponent,\r\n    TeamdialogComponent,\r\n    UpdateTeamComponent,\r\n    TeamdeleteComponent,\r\n    LogindialogComponent,\r\n    AcceptedApplicantsComponent,\r\n    RejectedApplicantsComponent,\r\n    IncidentsuccessfulComponent,\r\n    CreatereportComponent\r\n  ],\r\n  \r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    Material,\r\n    BrowserAnimationsModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyB954EX24ldvc9K55mjhdei_wg8Ly5shKQ'\r\n    }),\r\n  ],\r\n\r\n  entryComponents: [\r\n    MyDialogComponentComponent,\r\n    ApplicantacceptedComponent,\r\n    ApplicantdeniedComponent,\r\n    ReportDialogComponent,\r\n    ArchivedialogComponent,\r\n    TeamdialogComponent,\r\n    TeamdeleteComponent,\r\n    LogindialogComponent,\r\n    IncidentsuccessfulComponent,\r\n    CreatereportComponent\r\n  ],\r\n  \r\n  providers: [AuthService, AuthGuard],\r\n  bootstrap: [AppComponent],\r\n\r\n  // schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".button\\r\\n{\\r\\n  /* width: 150px; */\\r\\n  text-align: center;\\r\\n  size: 100px;\\r\\n  \\r\\n  /* margin-:0 auto; */\\r\\n  margin-left: 220px;\\r\\n  margin-top: 50px;\\r\\n\\r\\n}\\r\\n\\r\\n.text\\r\\n{\\r\\n  font-size: 50px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          Applicant Accepted!\\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"onClick()\\\">Ok</button>\\r\\n   <!-- <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>    -->\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DataService } from '../common/dataService';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { User } from '../common/user';\r\nimport { MyDialogComponentComponent } from '../my-dialog-component/my-dialog-component.component';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-applicantaccepted',\r\n  templateUrl: './applicantaccepted.component.html',\r\n  styleUrls: ['./applicantaccepted.component.css']\r\n})\r\nexport class ApplicantacceptedComponent implements OnInit {\r\n  applicant: User;\r\n  applicant_name:String;\r\n  constructor(private router: Router,private dataService: DataService,public ref: MatDialog,public thisDialogRef: MatDialogRef<MyDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) public data: User) { }\r\n\r\n  ngOnInit() {\r\n    this.applicant = this.data;\r\n    this.applicant.role=\"AcceptedApplicant\"\r\n    this.dataService.saveApplicantDecision(this.applicant)\r\n      .subscribe((data) => {\r\n\r\n      });\r\n  }\r\n\r\n  onClick()\r\n  {\r\n    this.ref.closeAll();\r\n    // this.router.navigate(['/reviewApplication']);\r\n    window.location.reload(true);\r\n  }\r\n\r\n}\r\n","module.exports = \".button\\r\\n{\\r\\n  /* width: 150px; */\\r\\n  text-align: center;\\r\\n  size: 100px;\\r\\n  \\r\\n  /* margin-:0 auto; */\\r\\n  margin-left: 220px;\\r\\n  margin-top: 50px;\\r\\n\\r\\n}\\r\\n\\r\\n.text\\r\\n{\\r\\n  font-size: 50px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          Applicant Denied!\\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"onClick()\\\">Ok</button>\\r\\n    \\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { User } from '../common/user';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../common/dataService';\r\nimport { MyDialogComponentComponent } from '../my-dialog-component/my-dialog-component.component';\r\n\r\n@Component({\r\n  selector: 'app-applicantdenied',\r\n  templateUrl: './applicantdenied.component.html',\r\n  styleUrls: ['./applicantdenied.component.css']\r\n})\r\nexport class ApplicantdeniedComponent implements OnInit {\r\n  applicant: User;\r\n  constructor(private router: Router,private dataService: DataService,public ref: MatDialog,public thisDialogRef: MatDialogRef<MyDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) public data: User) { }\r\n\r\n  ngOnInit() {\r\n    this.applicant = this.data;\r\n    this.applicant.role=\"RejectedApplicant\"\r\n    this.dataService.saveApplicantDecision(this.applicant)\r\n      .subscribe((data) => {\r\n\r\n      });\r\n\r\n  }\r\n  onClick()\r\n  {\r\n    this.ref.closeAll();\r\n    window.location.reload(true);\r\n  }\r\n\r\n}\r\n","module.exports = \"/* Assigned to kishan */\\r\\n\\r\\n.example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 1110px;\\r\\n  }\\r\\n\\r\\n.pageHeading {\\r\\n    margin: 13px auto;\\r\\n  }\\r\\n\\r\\n.example-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n  min-width: 400px;\\r\\n}\\r\\n\\r\\n.table-header{\\r\\n  font-size: 25px;\\r\\n  color: black;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.table-cell {\\r\\n  font-size: 15px;\\r\\n}\\r\\n\\r\\n/* for buttons - download */\\r\\n\\r\\n.buttons {\\r\\n    font-size: 1em;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<!--\\r\\n  This page is to show past incidents\\r\\n  Assigned to Kishan\\r\\n-->\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n  <span class=\\\"title mat-title\\\">\\r\\n    <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n  </span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n  <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n  <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n  <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n</mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for the Archived Incidents page -->\\r\\n  <!-- <h1>Archived Incidents</h1> -->\\r\\n  <h1 class=\\\"pageHeading mat-display-1\\\">Archived Incidents</h1>\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"example-header\\\">\\r\\n      <mat-form-field>\\r\\n        <!-- <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\"> -->\\r\\n        <!-- Picker is added to select the date from calendar -->\\r\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a start date\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker touchUi=\\\"true\\\" #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- Table contains details of the archived incidents -->\\r\\n        <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n          <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n          <!-- Incident Name Column -->\\r\\n          <ng-container matColumnDef=\\\"incidentName\\\">\\r\\n            <mat-header-cell *matHeaderCellDef class=\\\"table-header\\\"> Incident Name </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.incidentName }} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Location Name Column -->\\r\\n          <ng-container matColumnDef=\\\"location\\\">\\r\\n            <mat-header-cell *matHeaderCellDef class=\\\"table-header\\\"> Location </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.location }} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Date Column -->\\r\\n          <ng-container matColumnDef=\\\"date\\\">\\r\\n            <mat-header-cell *matHeaderCellDef class=\\\"table-header\\\"> Date </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.date | date }} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- Time Column -->\\r\\n          <!-- <ng-container matColumnDef=\\\"time\\\">\\r\\n            <mat-header-cell *matHeaderCellDef class=\\\"table-header\\\"> Time </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\"> {{element.time }} </mat-cell>\\r\\n          </ng-container> -->\\r\\n\\r\\n          <!-- Description Column -->\\r\\n          <ng-container matColumnDef=\\\"description\\\">\\r\\n            <mat-header-cell *matHeaderCellDef class=\\\"table-header\\\"> Description </mat-header-cell>\\r\\n            <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.description }} </mat-cell>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- When clicked on any row a popup is displayed showing the details of incident -->\\r\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"rowClicked(row)\\\"></mat-row>\\r\\n        </mat-table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col text-center\\\">\\r\\n      <!-- Button is provided to download the archived incidents to excel sheet -->\\r\\n      <a mat-raised-button color=\\\"primary\\\" class=\\\"buttons\\\" href=\\\"http://drrs.herokuapp.com/incidentReport\\\">Download</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Incident } from '../common/incident';\r\nimport { MatTableDataSource, MatSort, MatDatepickerInputEvent } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { DataService } from '../common/dataService';\r\nimport { AuthService } from './../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-archived-incidents',\r\n  templateUrl: './archived-incidents.component.html',\r\n  styleUrls: ['./archived-incidents.component.css']\r\n})\r\nexport class ArchivedIncidentsComponent implements OnInit {\r\n\r\n  incidents: Incident[];\r\n  events: string[] = []; // for date filter\r\n  displayedColumns = ['incidentName', 'location', 'date', 'description'];\r\n  dataSource: MatTableDataSource<Incident>;\r\n  selection = new SelectionModel<Incident>(true, []);\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private dataService: DataService, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getArciveIncident()\r\n      .subscribe((data) => {\r\n        this.incidents = data['data'];\r\n        this.dataSource = new MatTableDataSource<Incident>(this.incidents);\r\n        // console.log(this.incidents);\r\n      });\r\n  }\r\n\r\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\r\n    console.log(type + ' ' + event.value);\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n  \r\n}\r\n","module.exports = \".button1{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 10px;\\r\\n    \\r\\n}\\r\\n\\r\\n/* .button2{\\r\\n    margin-left: 380px;\\r\\n    \\r\\n} */\\r\\n\\r\\n.text\\r\\n{\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          <b>Do you want to archive the incident?</b> \\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"yes(data)\\\">Yes</button>\\r\\n        <button class=\\\"button2\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"no()\\\">No</button>\\r\\n    \\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Incident } from '../common/incident';\r\nimport { DataService } from '../common/dataService';\r\n\r\n@Component({\r\n  selector: 'app-archivedialog',\r\n  templateUrl: './archivedialog.component.html',\r\n  styleUrls: ['./archivedialog.component.css']\r\n})\r\nexport class ArchivedialogComponent implements OnInit {\r\n  incidents: Incident[];\r\n  isLoading = false;\r\n  id = { _id: String };\r\n  incident: Incident; \r\n\r\n  constructor(private dataService: DataService, public ref: MatDialog,@Inject(MAT_DIALOG_DATA) public data: Incident, public thisMatDialogRef: MatDialogRef<ArchivedialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.incident=this.data;\r\n    this.incidents = this.data['data'];\r\n        this.isLoading = false;\r\n  }\r\n  yes(item) {\r\n    this.thisMatDialogRef.close();\r\n    this.id = { _id: item._id };\r\n     console.log(this.id);\r\n    this.dataService.archiveIncident(this.id)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.dataService.getIncidentsList()\r\n        .subscribe((dataInci) => {\r\n        this.incidents = dataInci['data'];\r\n        this.isLoading = false;\r\n      });\r\n        item.isActive = false;\r\n        console.log('success');\r\n      },\r\n        error => {\r\n          console.log('Error Occured');\r\n        });\r\n  }\r\n\r\n  \r\n  no()\r\n  {\r\n    this.ref.closeAll();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.authService.isLoggedIn.pipe(\r\n      take(1),\r\n      map((isLoggedIn: boolean) => {\r\n        if (!isLoggedIn) {\r\n          this.router.navigate(['/login']);\r\n          return false;\r\n        }\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { User } from './user';\r\nimport { LogindialogComponent } from '../logindialog/logindialog.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  public message = \"Incorrect Usename or Passsword\";\r\n  private loggedIn = new BehaviorSubject<boolean>(false); // {1}\r\n\r\n  get isLoggedIn() {\r\n    return this.loggedIn.asObservable(); // {2}\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public ref: MatDialog,\r\n    public dialogref: MatDialog\r\n  ) {}\r\n\r\n\r\n  login(user: User){\r\n    if (user.userName === 'admin@drrs.com' && (user.password === 'Drrs@1234' || user.password === 'Admin@1234') ) { // {3}\r\n      this.loggedIn.next(true);\r\n      this.dialogref.open(LogindialogComponent, {\r\n        width:'600px',\r\n        // data:item\r\n    });\r\n      // this.router.navigate(['/dashboard']);\r\n      // console.log(\"Sucessfully logged in\");\r\n      // alert(\"Sucessfully logged in\")\r\n    }\r\n    else{\r\n    console.log(\"Incorrect Usename or Passsword\");\r\n     alert(this.message);\r\n    }\r\n  }\r\n\r\n  logout() {                            // {4}\r\n    this.loggedIn.next(false);\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Incident } from './incident';\r\nimport { Team } from './team';\r\nimport { User } from './user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // login(loginData){\r\n  //   return this.http.post(\"https://drrs.herokuapp.com/signin\", loginData);\r\n  // }\r\n\r\n  getApplicantsList() {\r\n    //   http call\r\n   return this.http.get('https://drrs.herokuapp.com/getApplicantsList');\r\n    // return this.http.get('http://localhost:3000/getApplicantsList');\r\n\r\n  }\r\n\r\n  getMembersList() {\r\n    //   http call\r\n   return this.http.get('https://drrs.herokuapp.com/getMembersList');\r\n    // return this.http.get('http://localhost:3000/getMembersList');\r\n\r\n  }\r\n\r\n  getRejectedMembersList() {\r\n    //   http call\r\n   return this.http.get('https://drrs.herokuapp.com/getRejectedMembersList');\r\n    // return this.http.get('http://localhost:3000/getRejectedMembersList');\r\n\r\n  }\r\n\r\n  saveApplicantDecision(data: User) {\r\n    // http call  \r\n    return this.http.put('https://drrs.herokuapp.com/saveApplicationDecision', data);\r\n    // return this.http.put('http://localhost:3000/saveApplicationDecision', data);\r\n  }\r\n\r\n\r\n  getIncidentsList() {\r\n    //   http call\r\n    return this.http.get('https://drrs.herokuapp.com/getIncidentsList');\r\n    // return this.http.get('http://localhost:3000/getIncidentsList');\r\n  }\r\n\r\n  getArciveIncident() {\r\n    //   http call\r\n    return this.http.get('https://drrs.herokuapp.com/getArchiveIncidents');\r\n    // return this.http.get('http://localhost:3000/getArchiveIncidents');\r\n  }\r\n\r\n  archiveIncident(data) {\r\n    //   http call\r\n    return this.http.put('https://drrs.herokuapp.com/archiveIncident', data);\r\n    // return this.http.put('http://localhost:3000/archiveIncident', data);\r\n  }\r\n\r\n  updateTeam(data) {\r\n    // http call  \r\n    return this.http.put('https://drrs.herokuapp.com/updateTeam', data);\r\n    // return this.http.put('http://localhost:3000/updateTeam', data);\r\n  }\r\n\r\n  deleteTeam(data) {\r\n    //   http call\r\n    return this.http.put('https://drrs.herokuapp.com/deleteTeam', data);\r\n    // return this.http.put('http://localhost:3000/deleteTeam', data);\r\n  }\r\n\r\n  getReportsList() {\r\n    //   http call\r\n    return this.http.get('https://drrs.herokuapp.com/getReportsList');\r\n    // return this.http.get('http://localhost:3000/getReportsList');\r\n\r\n  }\r\n\r\n  getTeamList() {\r\n    //   http call\r\n    return this.http.get('https://drrs.herokuapp.com/getTeamList');\r\n    // return this.http.get('http://localhost:3000/getTeamList');\r\n\r\n  }\r\n\r\n  saveIncident(data: Incident) {\r\n    // http call\r\n    return this.http.post('https://drrs.herokuapp.com/saveIncident', data);\r\n    // return this.http.post('http://localhost:3000/saveIncident', data);\r\n\r\n  }\r\n\r\n\r\n  saveTeam(data: Team) {\r\n    // http call\r\n    return this.http.post('https://drrs.herokuapp.com/saveTeam', data);\r\n    //  return this.http.post('http://localhost:3000/saveTeam', data);\r\n  }\r\n\r\n  getTeamById(data: string) {\r\n    // return this.http.get('http://localhost:3000/getTeam/' + data);\r\n    return this.http.get('https://drrs.herokuapp.com/getTeam/' + data);\r\n  }\r\n\r\n  getFileById() {\r\n    // return this.http.get('http://localhost:3000/certification/');\r\n    return this.http.get('https://drrs.herokuapp.com/certification/');\r\n  }\r\n\r\n\r\n  getReportById(data: string) {\r\n        // return this.http.get('http://localhost:3000/getReportById/'+ data);\r\n    return this.http.get('https://drrs.herokuapp.com/getReportById/' + data);\r\n  }\r\n\r\n  getTeamsById(data: string) {\r\n    //  return this.http.get('http://localhost:3000/getTeamsById/'+ data);\r\n    return this.http.get('https://drrs.herokuapp.com/getTeamsById/' + data);\r\n}\r\n\r\n}\r\n\r\n","// Assigned to Kishan\r\n\r\nexport class Incident {\r\n\r\nincidentID: string;\r\n  incidentName:  string;\r\n  location: string;\r\n  date: Date;\r\n  time: string;\r\n  description: string;\r\n  isActive:boolean;\r\n\r\n  constructor(values: Object = {}) {\r\n    /*Constructor initialization*/\r\n    Object.assign(this, values);\r\n}\r\n}","// Assigned to Vineeth\r\n\r\nexport class Report {\r\n\r\n  reportID: String;\r\n  reportedBy: String;\r\n  incidentName: String;\r\n  location: {\r\n      lat:Number;\r\n      lng:Number;\r\n  };\r\n  files: String;\r\n  casualties: {\r\n      red: Number;\r\n      yellow: Number;\r\n      green: Number;\r\n      black: Number;\r\n  };\r\n  structuralDamage: String;\r\n  fire: String;\r\n  utilities: String;\r\n  hazmat: String;\r\n  rescueteam:String;\r\n  others: String;\r\n\r\n\r\n  constructor(values: Object = {}) {\r\n    /*Constructor initialization*/\r\n    Object.assign(this, values);\r\n}\r\n}","// Assigned to Kishan\r\nimport { Applicant } from \"./applicant\"\r\nexport class Team {\r\n\r\n    teamID: string;\r\n    teamName: string;\r\n    incidentID: string;\r\n    isActive: boolean;\r\n    leader: string;\r\n    asstLeader: string;\r\n    members:  Applicant[]\r\n    \r\n\r\n    constructor(values: Object = {}) {\r\n        /*Constructor initialization*/\r\n        Object.assign(this, values);\r\n    }\r\n}","export class User {\r\n\r\n  firstName:  string;\r\n  lastName: string;\r\n  email:   string;\r\n  dob: Date;\r\n  password: string;\r\n  mobileNumber: string;\r\n  address1: string;\r\n  address2: string;\r\n  county: string;\r\n  city: string;\r\n  state: string;\r\n  country: string;\r\n  skills: string;\r\n  licenseNumber: string;\r\n  files: string;\r\n  limitations: string;\r\n  pushNotification: string;\r\n  salt: string;\r\n  token: string;\r\n  role: string;\r\n\r\n  constructor(values: Object = {}) {\r\n      /*Constructor initialization*/\r\n      Object.assign(this, values);\r\n  }\r\n}\r\n","module.exports = \"agm-map{\\r\\n    height: 460px;\\r\\n    /* width:  1000px; */\\r\\n    align-self: flex-end;\\r\\n}\\r\\n\\r\\n th, td {\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n #black_row{\\r\\n    background-color:black; \\r\\n    color: white\\r\\n}\\r\\n\\r\\n #red_row{\\r\\n    background-color:#ff0000; \\r\\n    color: white\\r\\n}\\r\\n\\r\\n #yellow_row{\\r\\n    background-color:yellow; \\r\\n}\\r\\n\\r\\n #green_row{\\r\\n    background-color:green; \\r\\n}\\r\\n\\r\\n .title {\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n .spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n a {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\n\\r\\n a.mat-button{\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  \\r\\n\"","module.exports = \"<!-- <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" (mapClick)=\\\"onChoseLocation($event)\\\"> -->\\r\\n\\r\\n<!-- \\r\\n        [latitude] is an agm-map object taking values of lat metioned in component.ts.\\r\\n        [Zoom] is a auto zoom functionality while loading the map taking value from component.ts\\r\\n        (mapClick) is a functionality that takes whenever clicked on map, this.coords object will give\\r\\n         the lat and long results which we can set to lat and lng in component.ts to change runtime\\r\\n         [markerDraggable] is used to drag the marker on the map.\\r\\n         (dragEnd) is used to do something when the marker dragging stopped by user by calling the method \\r\\n         we might write in markerDragEnd()\\r\\n         (markerClick) will do something we write when a marker is clicked.\\r\\n\\r\\n     -->\\r\\n\\r\\n<!-- <agm-map  [latitude]=40.349841283655195 [longitude]=-94.8827696546299 [zoomControl]=\\\"true\\\"> -->\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<agm-map  [latitude]=lat [longitude]=lng [zoomControl]=\\\"true\\\">\\r\\n    <agm-marker *ngFor=\\\"let m of reports; let i=index\\\" [latitude]=m.location.lat [longitude]=m.location.lng [iconUrl]=m.rescueteam>\\r\\n        <agm-info-window>\\r\\n            <strong>\\r\\n                <table style=\\\"width:30%\\\">\\r\\n                    <tr>\\r\\n                        <th>\\r\\n                            {{m.reportID}}\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                    <tr id=\\\"black_row\\\">\\r\\n                        <td align=\\\"center\\\">\\r\\n                            {{m.casualties.black}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr id=\\\"red_row\\\">\\r\\n                        <td align=\\\"center\\\">\\r\\n                            {{m.casualties.red}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr id=\\\"yellow_row\\\">\\r\\n                        <td align=\\\"center\\\">\\r\\n                            {{m.casualties.yellow}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                    <tr id=\\\"green_row\\\">\\r\\n                        <td align=\\\"center\\\">\\r\\n                            {{m.casualties.green}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </table>\\r\\n            </strong>\\r\\n        </agm-info-window>\\r\\n\\r\\n    </agm-marker>\\r\\n</agm-map>\"","import { Component, OnInit } from '@angular/core';\r\nimport {Report} from '../common/report';\r\nimport { DataService } from '../common/dataService';\r\nimport { AuthService } from './../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-cop',\r\n  templateUrl: './cop.component.html',\r\n  styleUrls: ['./cop.component.css']\r\n})\r\nexport class COPComponent implements OnInit {\r\n  lat:Number;\r\n  lng:Number;\r\n  icon:String;\r\n  reports: Report[];\r\n  constructor(private dataService: DataService, private authService: AuthService) { }\r\n\r\n  ngOnInit() {  \r\n    this.dataService.getReportsList()\r\n      .subscribe((data) => {\r\n        console.log(data)\r\n        let icon=\"\";\r\n        this.reports = data['data'];\r\n        for(let i=0;i<this.reports.length;i++){\r\n          if(this.reports[i].rescueteam==\"Ambulance\")\r\n          icon=\"medical\"\r\n          else if(this.reports[i].rescueteam==\"Fire Truck\")\r\n          icon=\"fire\"\r\n          else if(this.reports[i].rescueteam==\"Police/Law\")\r\n          icon=\"police\"\r\n          else if(this.reports[i].rescueteam==\"All\")\r\n          icon=\"all\"\r\n          else\r\n          icon =\"none\"\r\n          // icon=(this.reports[i].rescueteam==)?\"fire\":\"medical\"\r\n            this.reports[i].rescueteam=\"http://localhost:3000/icon/\"+icon+\".png\"\r\n        }\r\n        this.icon=\"http://localhost:3000/icon/fire.png\"\r\n        // this.reports[1].icon=\"\"\r\n        this.lat=this.reports[0].location.lat;\r\n        this.lng=this.reports[0].location.lng;        \r\n      });\r\n      \r\n  }\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n}\r\n\r\n","module.exports = \".container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.createContainer {\\r\\n    padding-left: 30em;\\r\\n    padding-right: 29em;\\r\\n}\\r\\n\\r\\n/* .primary{\\r\\n    background: #673ab7;\\r\\n    color: white;\\r\\n    font-size: 1em;\\r\\n} */\\r\\n\\r\\n.button-row button {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<!--\\r\\n  Assigned to Hemanth\\r\\n -->\\r\\n <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for the Create Incident page -->\\r\\n  <h1 class=\\\"pageHeading mat-display-1\\\">Create Incident</h1>\\r\\n  <hr>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"createContainer\\\">\\r\\n\\r\\n  <!-- Form provided to input details for incident details -->\\r\\n  <form novalidate (submit)=\\\"onCreate(createInc)\\\" #createInc=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"incidentName\\\">\\r\\n        <b>Incident Name</b>\\r\\n      </label>\\r\\n      <!-- Input for incident name -->\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"incident.incidentName\\\" name=\\\"incidentName\\\" #incidentName=\\\"ngModel\\\"\\r\\n        id=\\\"inputincidentName\\\" placeholder=\\\"Enter incident\\\" required>\\r\\n      <!--\\r\\n      incident name error block\\r\\n      by Kishan\\r\\n    -->\\r\\n      <!-- Input validation for incident name-->\\r\\n      <div *ngIf=\\\"(incidentName.invalid && ( incidentName.touched || incidentName.dirty)) || isSubmitted\\\" class=\\\"col-sm-7 text-danger\\\">\\r\\n        <div *ngIf=\\\"incidentName.errors?.required\\\" class=\\\"mat-body-1\\\">\\r\\n          Please enter the incident Name\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <label for=\\\"location\\\">\\r\\n        <b>Location</b>\\r\\n      </label>\\r\\n      <!-- Input field for location name -->\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"incident.location\\\" name=\\\"location\\\" location #location=\\\"ngModel\\\"\\r\\n        id=\\\"inputlocation\\\" placeholder=\\\"Enter location\\\" required>\\r\\n      <!--\\r\\n      location error block\\r\\n      by Kishan\\r\\n    -->\\r\\n      <!-- Input validation for location -->\\r\\n      <div *ngIf=\\\"(location.invalid && ( location.touched || location.dirty)) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\r\\n        <div *ngIf=\\\"location.errors?.required\\\" class=\\\"mat-body-1\\\">\\r\\n          Please enter the location\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Select date block -->\\r\\n      <label for=\\\"date\\\">\\r\\n        <b>Date</b>\\r\\n      </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"incident.date\\\" name=\\\"date\\\" #date=\\\"ngModel\\\" id=\\\"inputdate\\\"\\r\\n        value=\\\"incident.date\\\" disabled>\\r\\n      <!--\\r\\n      date error block\\r\\n      by Kishan\\r\\n    -->\\r\\n      <!-- Validtion for date block -->\\r\\n      <!-- <div *ngIf=\\\"(date.invalid && ( date.touched || date.dirty)) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\r\\n      <div *ngIf=\\\"date.errors?.required\\\">\\r\\n        Please enter the date\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n      <!-- Select time block -->\\r\\n      <label for=\\\"time\\\">\\r\\n        <b>Time</b>\\r\\n      </label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"incident.time\\\" name=\\\"time\\\" #time=\\\"ngModel\\\" id=\\\"inputtime\\\"\\r\\n        value=\\\"incident.date\\\" disabled>\\r\\n      <!--\\r\\n      time error block\\r\\n      by Kishan\\r\\n    -->\\r\\n      <!-- Validation for time block -->\\r\\n      <!-- <div *ngIf=\\\"(time.invalid && ( time.touched || time.dirty)) || isSubmitted\\\" class=\\\"col-sm-6 text-danger\\\">\\r\\n      <div *ngIf=\\\"time.errors?.required\\\">\\r\\n        Please enter the time\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n      <label for=\\\"description\\\">\\r\\n        <b>Description</b>\\r\\n      </label>\\r\\n      <!-- Input field for description name -->\\r\\n      <textarea type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"incident.description\\\" name=\\\"description\\\" description\\r\\n        #description=\\\"ngModel\\\" id=\\\"inputdescription\\\" placeholder=\\\"Enter description\\\" required></textarea>\\r\\n      <!--\\r\\n        description error block\\r\\n        by Kishan\\r\\n      -->\\r\\n      <!-- Input validation for description -->\\r\\n      <div *ngIf=\\\"(description.invalid && ( description.touched || description.dirty)) || isSubmitted\\\" class=\\\"col-sm-7 text-danger\\\">\\r\\n        <div *ngIf=\\\"description.errors?.required\\\" class=\\\"mat-body-1\\\">\\r\\n          Please enter the description\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Button provided to Create Incident -->\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" (click)=\\\"dialog()\\\"> Create </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" routerLink=\\\"/dashboard\\\"> Cancel </button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Incident } from '../common/incident';\r\nimport { DataService } from '../common/dataService';\r\nimport { MatDialog } from '@angular/material';\r\nimport { IncidentsuccessfulComponent } from '../incidentsuccessful/incidentsuccessful.component';\r\n\r\n@Component({\r\n  selector: 'app-create-incident',\r\n  templateUrl: './create-incident.component.html',\r\n  styleUrls: ['./create-incident.component.css']\r\n})\r\nexport class CreateIncidentComponent implements OnInit {\r\n\r\n  incident: Incident;\r\n  date = new Date;\r\n  constructor(private router: Router, private dataService: DataService, public dialogref: MatDialog) {\r\n    this.incident = new Incident({\r\n      incidentID: '',\r\n      incidentName: '',\r\n      location: '',\r\n      date: this.date,\r\n      time: this.date,\r\n      description: '',\r\n      isActive: false\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  onCreate({ value, valid }: { value: Incident, valid: boolean }) {\r\n    // alert(\"Incident module created successfully\");\r\n    // this.router.navigate(['/dashboard']);\r\n    value.incidentID = value.incidentName + '_' + this.convert(this.date);\r\n    value.isActive = true;\r\n    // console.log(value.incidentName+this.convert(this.date));\r\n    this.incident = value;\r\n    console.log(this.incident);\r\n    // make http req. only if form is valid\r\n    if (valid) {\r\n      this.dataService.saveIncident(this.incident)\r\n        .subscribe((data) => {\r\n          console.log(data);\r\n          console.log('success');\r\n          this.router.navigate(['/dashboard']);\r\n        },\r\n          error => {\r\n            console.log('Error Occured');\r\n          });\r\n    }\r\n  }\r\n\r\n  convert(str) {\r\n    // tslint:disable-next-line:prefer-const\r\n    let date = new Date(str),\r\n      // tslint:disable-next-line:prefer-const\r\n      mnth = ('0' + (date.getMonth() + 1)).slice(-2),\r\n      // tslint:disable-next-line:prefer-const\r\n      day = ('0' + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day].join('');\r\n  }\r\n  dialog()\r\n  {\r\n    this.dialogref.open(IncidentsuccessfulComponent, {\r\n      width:'600px',\r\n      // data:item\r\n  });\r\n  }\r\n}\r\n","module.exports = \".primary{\\r\\n  background: #673ab7;\\r\\n  color: white;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.table-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.filter-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-form-field-filter {\\r\\n  font-size: 20px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.button-row button {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\\r\\n.mat-header-cell {\\r\\n  font-size: 22px;\\r\\n  color: black;\\r\\n  font-weight: bold;\\r\\n  padding: 12px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-cell {\\r\\n  padding: 12px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\"","module.exports = \"<!--\\r\\n  Assigned to Chandra mouli\\r\\n -->\\r\\n<!-- @Author Chandra Mouli Kantipudi -->\\r\\n<!-- Page not yet completed -->\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for the page -->\\r\\n  <h1><b>Create Team</b></h1>\\r\\n  <hr>\\r\\n\\r\\n  <!-- Form to input the team details -->\\r\\n  <form novalidate (ngSubmit)=\\\"onCreate(createTeam)\\\" #createTeam=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"team\\\">\\r\\n          <h3><b>Team Name</b></h3>\\r\\n        </label>\\r\\n      <!--Input for team name -->\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n      id = \\\"teamName\\\" name =\\\"teamName\\\"\\r\\n      ngModel\\r\\n      [value]=\\\"teamName\\\"\\r\\n      required\\r\\n          placeholder=\\\"Enter Team Name\\\" required>\\r\\n        <br>\\r\\n\\r\\n      <!-- TeamID should autogenerate -->\\r\\n      <!-- <label for=\\\"teamID\\\">\\r\\n        <b>Team ID :</b>\\r\\n      </label>\\r\\n      {{a}} -->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-container mat-elevation-z8\\\">\\r\\n      <div class=\\\"filter-header\\\">\\r\\n        <mat-form-field class=\\\"mat-form-field-filter\\\">\\r\\n          <!-- Filter provided to filter the table data -->\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <!-- Table -->\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!--- Note that these columns can be defined in any order.\\r\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n        <!-- Checkbox Column -->\\r\\n        <ng-container matColumnDef=\\\"select\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n              [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n            </mat-checkbox>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\r\\n            </mat-checkbox>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- First Name Column\\r\\n      <ng-container matColumnDef=\\\"firstName\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> First Name </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName }} </mat-cell>\\r\\n      </ng-container> -->\\r\\n\\r\\n        <!-- First Name Column -->\\r\\n        <ng-container matColumnDef=\\\"firstName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Last Name Column-->\\r\\n        <ng-container matColumnDef=\\\"lastName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"email\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"dob\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Date of Birth </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dob | date }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"county\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> County </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.county}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"skills\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Skills </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.skills}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"Select Leader\\\" id=\\\"leader\\\" name=\\\"leader\\\" ngModel [value]=\\\"leader\\\" required>\\r\\n        <mat-option *ngFor=\\\"let leader of selection.selected\\\" [value]=\\\"leader.firstName + leader.lastName\\\">\\r\\n          {{leader.firstName}} {{leader.lastName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"Select Assistant Leader\\\" id=\\\"asstLeader\\\" name=\\\"asstLeader\\\" ngModel [value]=\\\"asstLeader\\\"\\r\\n        required>\\r\\n        <mat-option *ngFor=\\\"let asstLeader of selection.selected\\\" [value]=\\\"asstLeader.firstName + asstLeader.lastName\\\">\\r\\n          {{asstLeader.firstName}} {{asstLeader.lastName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n\\r\\n    <!-- Button provided to create team -->\\r\\n    <!-- <button class=\\\"btn primary\\\"> Create Team</button> -->\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <!-- <button  mat-raised-button color = \\\"primary\\\" (click)=\\\"dialogue()\\\">Create Team</button> -->\\r\\n      <button mat-raised-button color=\\\"primary\\\"> Create </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/teamsById', inciID]\\\"> Cancel </button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Applicant } from '../common/applicant';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { DataService } from '../common/dataService';\r\nimport { Team } from '../common/team';\r\nimport { TeamdialogComponent } from '../teamdialog/teamdialog.component';\r\nimport { TouchSequence } from 'selenium-webdriver';\r\n\r\nexport interface Members {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-teams',\r\n  templateUrl: './create-teams.component.html',\r\n  styleUrls: ['./create-teams.component.css']\r\n})\r\n\r\nexport class CreateTeamsComponent implements OnInit {\r\n  inciID : string;\r\n  @ViewChild('createTeam') signupForm: NgForm;\r\n  a = Math.floor((Math.random() * 10000) + 1);\r\n  team: Team;\r\n  saveTeam=false;\r\n  applicants: Applicant[];\r\n \r\n  displayedColumns = ['select', 'firstName', 'lastName', 'email', 'dob', 'county', 'skills'];\r\n  dataSource = new MatTableDataSource<Applicant>(this.applicants)\r\n  selection = new SelectionModel<Applicant>(true, []);\r\n\r\n   /** Whether the number of selected elements matches the total number of rows. */\r\n   isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n        this.selection.clear() :\r\n        this.dataSource.data.forEach(row => {\r\n          this.selection.select(row); \r\n         // console.log(row);\r\n        });\r\n        // console.log(this.selection);\r\n        \r\n  }\r\n\r\n  constructor(public route: ActivatedRoute,\r\n    private router: Router, \r\n    private dataService: DataService, \r\n    public dialogref: MatDialog) {\r\n    this.team = new Team({\r\n      teamID: '',\r\n      members: [],\r\n      leader: '',\r\n      asstLeader: '',\r\n      isActive: false,\r\n      teamName: ''\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getMembersList()\r\n      .subscribe((data) => {\r\n        this.applicants = data['data'];\r\n        this.dataSource = new MatTableDataSource<Applicant>(this.applicants);\r\n      });\r\n      this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n        this.inciID = paramMap.get('incidentID');\r\n        console.log(\"value of incidentID is \"+this.inciID);\r\n      })\r\n  }\r\n\r\n  onCreate() {    // alert(\"Incident module created successfully\");\r\n    // this.router.navigate(['/dashboard']);\r\n  // if(this.saveTeam){\r\n    this.team.teamID = \"Team\"+this.a;\r\n    this.team.members = this.selection.selected;\r\n    this.team.isActive = true;\r\n    this.team.incidentID = this.inciID;\r\n    this.team.leader = this.signupForm.value.leader;\r\n    this.team.asstLeader = this.signupForm.value.asstLeader;\r\n    this.team.teamName = this.signupForm.value.teamName;\r\n    console.log(this.signupForm.value.teamName);\r\n    console.log(this.team);\r\n    //make http req. only if form is valid\r\n    this.dialogref.open(TeamdialogComponent, {\r\n      width:'600px',\r\n      data:this.team\r\n  });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // dialogue()\r\n  // {\r\n  //   this.dialogref.open(TeamdialogComponent, {\r\n  //     width:'600px'\r\n  //     // data:item\r\n  // });\r\n  // // this.onCreate(createTeam)\r\n\r\n  // }\r\n\r\n}\r\n","module.exports = \".container {\\r\\n    margin-top: 1em;\\r\\n  }\\r\\n  \\r\\n  .pageHeading {\\r\\n    margin: auto;\\r\\n  }\\r\\n  \\r\\n  .createContainer {\\r\\n      padding-left: 30em;\\r\\n      padding-right: 29em;\\r\\n  }\\r\\n  \\r\\n  /* .primary{\\r\\n      background: #673ab7;\\r\\n      color: white;\\r\\n      font-size: 1em;\\r\\n  } */\\r\\n  \\r\\n  .button-row button {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n  \\r\\n  \"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!-- Header for the Create Incident page -->\\r\\n  <h1 class=\\\"pageHeading mat-display-1\\\">Create Report</h1>\\r\\n  <hr>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"createContainer\\\">\\r\\n\\r\\n  <!-- Form provided to input details for incident details -->\\r\\n  <form novalidate (submit)=\\\"onCreate(createInc)\\\" #createInc=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"reportedBy\\\">\\r\\n        <b>Reported By</b>\\r\\n      </label>\\r\\n      <!-- Input for incident name -->\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"report.reportedBy\\\" name=\\\"reportedBy\\\" #reportedBy=\\\"ngModel\\\"\\r\\n        id=\\\"inputreportedBy\\\" placeholder=\\\"Enter your email address\\\" required>\\r\\n      <!--\\r\\n      incident name error block\\r\\n      by Kishan\\r\\n    -->\\r\\n      <!-- Input validation for incident name-->\\r\\n      <div *ngIf=\\\"(reportedBy.invalid && ( reportedBy.touched || reportedBy.dirty)) || isSubmitted\\\" class=\\\"col-sm-7 text-danger\\\">\\r\\n        <div *ngIf=\\\"reportedBy.errors?.required\\\" class=\\\"mat-body-1\\\">\\r\\n          Please enter your email address\\r\\n        </div>\\r\\n      </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-createreport',\r\n  templateUrl: './createreport.component.html',\r\n  styleUrls: ['./createreport.component.css']\r\n})\r\nexport class CreatereportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n\r\n}\r\n","module.exports = \"/* Assigned to Mouli and Kishan*/\\r\\n.container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n/* cards */\\r\\n.incident-card {\\r\\n    /* max-width: 235px; */\\r\\n    width: 255px;\\r\\n    height: 350px;\\r\\n    margin-top: 2em;\\r\\n}\\r\\n.mat-card-image{\\r\\n    width: 255px;\\r\\n    height: 165px;\\r\\n}\\r\\n/* for buttons - Create incident and Archived Incidents */\\r\\n.buttons {\\r\\n    font-size: 1em;\\r\\n}\\r\\n/* Describtion height */\\r\\n.p-height{\\r\\n    height: 6em;\\r\\n}\\r\\n.mt-archive{\\r\\n    margin-top: 0.4em;\\r\\n}\\r\\nmat-grid-tile {\\r\\n    background: lightblue;\\r\\n  }\\r\\n.title {\\r\\n    margin: auto;\\r\\n  }\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\na {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\na.mat-button{\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  \"","module.exports = \"<!--\\r\\n  Assigned to Chandra mouli\\r\\n -->\\r\\n<!-- @Author Chandra Mouli Kantipudi -->\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for the dashboard page -->\\r\\n  <h1 class=\\\"pageHeading mat-display-1\\\">Dashboard</h1>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <!-- Create incident button provided to route to create incident page -->\\r\\n      <button routerLink=\\\"/createIncident\\\" mat-raised-button color=\\\"primary\\\" class=\\\"buttons\\\">Create Incident</button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col text-right\\\">\\r\\n      <!-- Archived Incidents button provided to route to Archived Incidents page -->\\r\\n      <button routerLink=\\\"/archivedIncidents\\\" mat-raised-button color=\\\"primary\\\" class=\\\"buttons\\\">Archived Incidents</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\r\\n    <div *ngFor=\\\"let item of incidents\\\">\\r\\n      <div class=\\\"col-4 text-center\\\" *ngIf=\\\"item.isActive\\\">\\r\\n        <!-- The incident modules are shown using cards. Card has image of incident,\\r\\n        brief description and two buttons edit and archive -->\\r\\n        <mat-card *ngIf=\\\"incidents.length > 0 && !isLoading\\\" class=\\\"incident-card mat-elevation-z5\\\">\\r\\n          <!-- <div [ngSwitch]=\\\"item.incidentName\\\">\\r\\n            <a *ngSwitchCase=\\\"'Earthquake'\\\" routerLink=\\\"/dashboard\\\">\\r\\n              \\r\\n              <img mat-card-image src=\\\"assets/images/incidents/img.1.jpg\\\" alt=\\\"Earthquake\\\">\\r\\n            </a>\\r\\n            <a *ngSwitchCase=\\\"'Floods'\\\" routerLink=\\\"/dashboard\\\">\\r\\n              \\r\\n              <img mat-card-image src=\\\"assets/images/incidents/img.4.jpg\\\" alt=\\\"Floods\\\">\\r\\n            </a>\\r\\n            <a *ngSwitchCase=\\\"'Hurricane'\\\" routerLink=\\\"/dashboard\\\">\\r\\n              \\r\\n              <img mat-card-image src=\\\"assets/images/incidents/img.5.jpg\\\" alt=\\\"Hurricane\\\">\\r\\n            </a>\\r\\n            <a *ngSwitchCase=\\\"'Wildfire'\\\" routerLink=\\\"/dashboard\\\">\\r\\n              \\r\\n              <img mat-card-image src=\\\"assets/images/incidents/img.2.jpg\\\" alt=\\\"Wildfire\\\">\\r\\n            </a>\\r\\n            <a *ngSwitchCase=\\\"'Tornado'\\\" routerLink=\\\"/dashboard\\\">\\r\\n              \\r\\n              <img mat-card-image src=\\\"assets/images/incidents/img.3.jpg\\\" alt=\\\"Tornado\\\">\\r\\n            </a>\\r\\n            <a *ngSwitchDefault routerLink=\\\"/dashboard\\\">\\r\\n              \\r\\n              <img mat-card-image src=\\\"assets/images/incidents/img.6.jpg\\\" alt=\\\"Others\\\">\\r\\n            </a>\\r\\n          </div> -->\\r\\n          <mat-card-content>\\r\\n            <!-- Name of incident -->\\r\\n            <h2>{{ item.incidentName }}</h2>\\r\\n            <p>\\r\\n              <!-- Brief description of incident -->\\r\\n              <i class=\\\"fa fa-map-marker\\\" aria-hidden=\\\"true\\\"></i> {{ item.location }}\\r\\n            </p>\\r\\n            <p class=\\\"p-height\\\">\\r\\n              <!-- Brief description of incident -->\\r\\n              {{ item.description }}\\r\\n            </p>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions>\\r\\n            <!-- Report button is provided to retrive report of the incident module-->\\r\\n            <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"report(item.incidentID)\\\">Report</button> -->\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink] = \\\"['/reportById', item.incidentID]\\\">Reports</button>\\r\\n            <!-- Team button is provided to view team and its members in the incident module -->\\r\\n            <button mat-raised-button color=\\\"primary\\\" [routerLink] = \\\"['/teamsById', item.incidentID]\\\">Teams</button>\\r\\n            <!-- <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/teams\\\">Team</button> -->\\r\\n            <!-- Archive button is provided to archive the incident module -->\\r\\n            <div class=\\\"mt-archive\\\">\\r\\n\\r\\n            <!-- <button mat-raised-button color=\\\"warn\\\"  >Archive</button> -->\\r\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"dialog(item)\\\">Archive</button>\\r\\n              <!-- onArchive(item) -->\\r\\n            </div>\\r\\n          </mat-card-actions>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p class=\\\"mat-title\\\" *ngIf=\\\"!incidents?.length\\\">No incident to show!</p>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../common/dataService';\r\nimport { Incident } from '../common/incident';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ArchivedialogComponent } from '../archivedialog/archivedialog.component';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  // isLoggedIn$: Observable<boolean>;\r\n  incidents: Incident[];\r\n  isLoading = false;\r\n  id = { _id: String };\r\n  constructor(private router: Router, private dataService: DataService, public dialogref: MatDialog,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    // this.isLoggedIn$ = this.authService.isLoggedIn;\r\n    this.dataService.getIncidentsList()\r\n      .subscribe((data) => {\r\n        this.incidents = data['data'];\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  onArchive(item) {\r\n    this.id = { _id: item._id };\r\n    // console.log(this.id);\r\n    this.dataService.archiveIncident(this.id)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.dataService.getIncidentsList()\r\n        .subscribe((dataInci) => {\r\n        this.incidents = dataInci['data'];\r\n        this.isLoading = false;\r\n      });\r\n        item.isActive = false;\r\n        console.log('success');\r\n      },\r\n        error => {\r\n          console.log('Error Occured');\r\n        });\r\n  }\r\n\r\n  dialog(item)\r\n  {\r\n    this.dialogref.open(ArchivedialogComponent, {\r\n      width:'600px',\r\n      data:item\r\n  });\r\n  }\r\n\r\n  report(incident_id)\r\n  {\r\n    console.log(\"entered from dasboard report method \"+incident_id)\r\n    // this.router.navigate(['/report', {\r\n      this.router.navigate(['/reportById', {      \r\n      data:incident_id }]\r\n    );\r\n\r\n    \r\n \r\n  //   this.dialogref.open(ArchivedialogComponent, {\r\n  //     width:'600px',\r\n  //     data:incident_id\r\n  // });\r\n  }\r\n\r\n  teams(incident_id)\r\n    {\r\n      console.log(\"entered from dasboard teams method \"+incident_id)\r\n      // this.router.navigate(['/report', {\r\n        this.router.navigate(['/TeamsById', {      \r\n        data:incident_id }]\r\n      );\r\n}\r\n\r\nonLogout() {\r\n  this.authService.logout();\r\n}\r\n\r\n}","module.exports = \".button1{\\r\\n    margin-left: 245px;\\r\\n    margin-top: 10px;\\r\\n    \\r\\n}\\r\\n\\r\\n/* .button2{\\r\\n    margin-left: 380px;\\r\\n    \\r\\n} */\\r\\n\\r\\n.text\\r\\n{\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          Incident successfully created!\\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"onClick()\\\">Ok</button>\\r\\n   <!-- <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>    -->\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-incidentsuccessful',\r\n  templateUrl: './incidentsuccessful.component.html',\r\n  styleUrls: ['./incidentsuccessful.component.css']\r\n})\r\nexport class IncidentsuccessfulComponent implements OnInit {\r\n\r\n  constructor(public ref: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  onClick()\r\n  {\r\n    this.ref.closeAll();\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-card {\\r\\n  max-width: 400px;\\r\\n  text-align: center;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.center {\\r\\n  text-align: center;\\r\\n  margin-top: 3em;\\r\\n}\\r\\n\\r\\n.full-width-input {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    width: 30%;\\r\\n    margin: 1em auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n\\r\\nimg {\\r\\n    width: 30%;\\r\\n  }\"","module.exports = \"<!--\\r\\n  Assigned to Hemanth\\r\\n -->\\r\\n <div class=\\\"center\\\">\\r\\n   <h1>Disaster Response & Reporting System</h1>\\r\\n </div>\\r\\n <div class=\\\"logo\\\">\\r\\n    <img src=\\\"assets/images/EOC_logo.gif\\\" alt=\\\"EOC_logo\\\">\\r\\n </div>\\r\\n\\r\\n <div>\\r\\n    <mat-card>\\r\\n      <mat-card-content>\\r\\n        <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n          <p>Please login to continue</p>\\r\\n          <mat-form-field class=\\\"full-width-input\\\">\\r\\n            <input matInput placeholder=\\\"User\\\" formControlName=\\\"userName\\\" required>\\r\\n            <mat-error *ngIf=\\\"isFieldInvalid('userName')\\\">\\r\\n              Please inform your user name\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"full-width-input\\\">\\r\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\r\\n            <mat-error *ngIf=\\\"isFieldInvalid('userName')\\\">\\r\\n              Please inform your password\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Login</button>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './../auth/auth.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  private formSubmitAttempt: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      userName: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  isFieldInvalid(field: string) {\r\n    return (\r\n      (!this.form.get(field).valid && this.form.get(field).touched) ||\r\n      (this.form.get(field).untouched && this.formSubmitAttempt)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.authService.login(this.form.value);\r\n    }\r\n    this.formSubmitAttempt = true;\r\n  }\r\n}","module.exports = \".button1{\\r\\n    margin-left: 245px;\\r\\n    margin-top: 10px;\\r\\n    \\r\\n}\\r\\n\\r\\n/* .button2{\\r\\n    margin-left: 380px;\\r\\n    \\r\\n} */\\r\\n\\r\\n.text\\r\\n{\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          <b>Login Successful!</b> \\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"yes()\\\">OK</button>\\r\\n        <!-- <button class=\\\"button2\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"no()\\\">No</button> -->\\r\\n    \\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-logindialog',\r\n  templateUrl: './logindialog.component.html',\r\n  styleUrls: ['./logindialog.component.css']\r\n})\r\nexport class LogindialogComponent implements OnInit {\r\n\r\n  constructor(public ref: MatDialog, private router: Router,) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  yes()\r\n  {\r\n    this.ref.closeAll();\r\n    this.router.navigate(['/dashboard']);\r\n      console.log(\"Sucessfully logged in\");\r\n  }\r\n  no()\r\n  {\r\n    this.ref.closeAll();\r\n  }\r\n\r\n}\r\n","module.exports = \".pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.text-style {\\r\\n  font-size: 20px;\\r\\n}\\r\\n\\r\\n.files {\\r\\n  color:blue;\\r\\n  cursor:pointer;\\r\\n}\"","module.exports = \"<div>\\r\\n    <h1 class=\\\"pageHeading mat-display-1\\\">Applicant Details:</h1>\\r\\n    <!-- mat-dialog-title -->\\r\\n    <hr>\\r\\n    <mat-dialog-content>\\r\\n      <!-- <div class=\\\"container\\\"> -->\\r\\n  <div class=\\\"row text-style\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h3><u>Personal Details:</u></h3>\\r\\n      <p><b>First Name: </b>{{ user.firstName }}</p>\\r\\n      <p><b>Second Name: </b>{{ user.lastName }}</p>\\r\\n      <p><b>Email Id: </b>{{ user.email }}</p>\\r\\n      <p><b>Date of Birth: </b>{{ user.dob | date: 'dd/MM/yyyy' }}</p>\\r\\n      <p><b>Mobile Number: </b> {{ user.mobileNumber }}</p>\\r\\n      <h3><u>Address: </u></h3>\\r\\n      {{ user.address1 }},<br>\\r\\n      {{ user.address2 }}, {{ user.county }},<br>\\r\\n      {{ user.city }}, {{ user.state }}, {{ user.country }}\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <h3><u>Additional Details:</u></h3>\\r\\n      <p><b>Skills: </b> {{ user.skills }} </p>\\r\\n      <p><b>Lisence Number: </b> {{ user.licenseNumber }} </p>\\r\\n      <p><b>Limitations: </b>{{ user.limitations }}</p>\\r\\n      <!-- <p *ngIf='user.files'><b>Certification: </b><a id=\\\"file\\\" href=\\\"http://localhost:3000/certification\\\">{{ user.files }}</a></p> -->\\r\\n      <p *ngIf='user.files'><b>Certification: </b>\\r\\n        <a id=\\\"file\\\" href=\\\"{{temp}}\\\" >{{ filename }}</a>\\r\\n      </p>\\r\\n      <p *ngIf='!user.files'><b>Certification: </b>No files uploaded</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- </div> -->\\r\\n    <!-- <strong>{{data}}</strong> -->\\r\\n  </mat-dialog-content>\\r\\n  <hr>\\r\\n  <mat-dialog-actions>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"accept()\\\">Accept</button>\\r\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"deny()\\\">Deny</button>\\r\\n  </mat-dialog-actions>\\r\\n  </div>\\r\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n// import { DialogDemoComponent } from '../dialog-demo/dialog-demo.component';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { User } from '../common/user';\r\nimport { MatDialog} from '@angular/material';\r\nimport { ApplicantacceptedComponent } from '../applicantaccepted/applicantaccepted.component';\r\nimport { ApplicantdeniedComponent } from '../applicantdenied/applicantdenied.component';\r\nimport { DataService } from '../common/dataService';\r\n\r\n\r\n@Component({\r\n  selector: 'app-my-dialog-component',\r\n  templateUrl: './my-dialog-component.component.html',\r\n  styleUrls: ['./my-dialog-component.component.css']\r\n})\r\nexport class MyDialogComponentComponent implements OnInit {\r\n  dialogResult=\"\";\r\n  temp=\"\";\r\n  filename=\"\"\r\n  // dataService:DataService;\r\n  user: User;\r\n  constructor(private dataService: DataService, public dialog: MatDialog, public thisDialogRef: MatDialogRef<MyDialogComponentComponent>, @Inject(MAT_DIALOG_DATA) public data: User) { }\r\n\r\n  ngOnInit() {\r\n    this.user = this.data;\r\n        var file=this.user.files;\r\n    // var file=\"disasters.jpg\";\r\n    var filearr=file.split(\"\\\\\")\r\n    console.log(filearr)\r\n     this.filename=filearr[filearr.length-1]  \r\n    console.log(\"file is \"+this.user.files)\r\n    // this.temp=\"http://localhost:3000/certification/\"+this.filename\r\n    this.temp=\"https://drrs.herokuapp.com/certification/\"+this.filename\r\n    \r\n    // document.getElementById(\"file\").setAttribute('href', \"http://localhost:3000/certifications\");\r\n    // $(\"#file\").href=\r\n    // $(\"#file\").attr(\"href\", \"https://www.w3schools.com/jquery/\");\r\n\r\n\r\n  }\r\n\r\n  accept() {\r\n    let dialogReff=this.dialog.open(ApplicantacceptedComponent,{\r\n      width:'600px',\r\n      data:this.user\r\n  \r\n    });\r\n    dialogReff.afterClosed().subscribe(result=>{\r\n      // console.log('Dialog closed: ${result}');\r\n      this.dialogResult=result;\r\n    })\r\n  }\r\n\r\n\r\n  downloadFile(){\r\n    this.dataService.getFileById()\r\n    .subscribe((data) => {\r\n      console.log(data);\r\n      console.log('success');\r\n    },\r\n      error => {\r\n        console.log('Error Occured');\r\n      });\r\n  }\r\n\r\n  deny() {\r\n    let dialogReff=this.dialog.open(ApplicantdeniedComponent,{\r\n      width:'600px',\r\n      data:this.user\r\n  \r\n    });\r\n    dialogReff.afterClosed().subscribe(result=>{\r\n      // console.log('Dialog closed: ${result}');\r\n      this.dialogResult=result;\r\n    })\r\n  }\r\n  \r\n}\r\n","module.exports = \".title {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\" *ngIf=\\\"isLoggedIn$ \\\">\\r\\n<!-- <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\"> -->\\r\\n  <span class=\\\"title mat-title\\\">\\r\\n    <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n  </span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n  <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n  <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n  <!-- <a mat-button (click)=\\\"onLogout()\\\" *ngIf=\\\"isLoggedIn\\\">Logout</a> -->\\r\\n  <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  isLoggedIn$: Observable<boolean>;\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.isLoggedIn$ = this.authService.isLoggedIn;\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","module.exports = \"/* Assigned to kishan */\\r\\n.container {\\r\\n    margin-top: 1em;\\r\\n  }\\r\\n.pageHeading {\\r\\n    margin: auto;\\r\\n  }\\r\\n.table-container {\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      min-width: 300px;\\r\\n    }\\r\\n.filter-header {\\r\\n    min-height: 64px;\\r\\n    padding: 8px 24px 0;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 20px;\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n.table-header{\\r\\n    font-size: 22px;\\r\\n    color: black;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n.table-cell {\\r\\n    font-size: 15px;\\r\\n  }\\r\\n.buttons {\\r\\n    font-size: 1em;\\r\\n  }\\r\\n.button-row button {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n.title {\\r\\n    margin: auto;\\r\\n  }\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\na {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\na.mat-button{\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  \"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for Review Applications -->\\r\\n<h1 class=\\\"pageHeading mat-display-1\\\">Rejected Applicants</h1>\\r\\n<hr>\\r\\n<button mat-raised-button color=\\\"warn\\\" routerLink = \\\"/reviewApplication\\\"><i class=\\\"fas fa-long-arrow-alt-left fa-3x\\\"></i></button>\\r\\n<br>\\r\\n<br>\\r\\n<div class=\\\"table-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"filter-header\\\">\\r\\n    <mat-form-field>\\r\\n      <!-- Filter provided to filter the table data -->\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- First Name Column -->\\r\\n    <ng-container matColumnDef=\\\"firstName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> First Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.firstName }} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Last Name Column -->\\r\\n    <ng-container matColumnDef=\\\"lastName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Last Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.lastName }} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Email </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.email}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Date of Birth Column -->\\r\\n    <ng-container matColumnDef=\\\"dob\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Date of Birth </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.dob}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- County Column -->\\r\\n    <ng-container matColumnDef=\\\"county\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> County </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.county}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Skills Column -->\\r\\n    <ng-container matColumnDef=\\\"skills\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Skills </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.skills}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n  </mat-table>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n// import { applicant } from '../common/mock-applicants'; // for mock user\r\nimport {MatTableDataSource, MatSort} from '@angular/material';\r\nimport { Applicant } from '../common/applicant';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { DataService } from '../common/dataService';\r\nimport { MatDialog} from '@angular/material';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-rejected-applicants',\r\n  templateUrl: './rejected-applicants.component.html',\r\n  styleUrls: ['./rejected-applicants.component.css']\r\n})\r\nexport class RejectedApplicantsComponent implements OnInit {\r\n\r\n  dialogResult = '';\r\n\r\n  applicants: Applicant[];\r\n  displayedColumns = ['firstName', 'lastName', 'email', 'county', 'skills'];\r\n  dataSource = new  MatTableDataSource<Applicant>(this.applicants);\r\n  selection = new SelectionModel<Applicant>(true, []);\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n\r\n  constructor(private dataService: DataService, public dialog: MatDialog,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getRejectedMembersList()\r\n      .subscribe((data) => {\r\n        this.applicants = data['data'];\r\n        this.dataSource = new MatTableDataSource<Applicant>(this.applicants);\r\n      });\r\n\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n  \r\n}\r\n","module.exports = \".pageHeading {\\r\\n    margin: auto;\\r\\n  }\\r\\n  \\r\\n  .text-style {\\r\\n    font-size: 20px;\\r\\n  }\\r\\n  \"","module.exports = \"<div>\\r\\n  <h1 class=\\\"pageHeading mat-display-1\\\">Report Details:</h1>\\r\\n  <!-- mat-dialog-title -->\\r\\n  <hr>\\r\\n  <mat-dialog-content>\\r\\n    <!-- <div class=\\\"container\\\"> -->\\r\\n<div class=\\\"row text-style\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <p><b>Reported By: </b>{{ report.reportedBy }}</p>\\r\\n    <p><b>Incident Name: </b>{{ report.incidentName }}</p>\\r\\n    <p><b>location: </b>{{ report.location.lat + \\\" \\\" + report.location.lng }}</p>\\r\\n    <h3><u>Casualties: </u></h3>\\r\\n    <p class=\\\"text-danger font-weight-bold\\\">Red: {{ report.casualties.red }}</p> \\r\\n    <p class=\\\"text-warning font-weight-bold\\\">Yellow: {{ report.casualties.yellow }}</p> \\r\\n    <p class=\\\"text-success font-weight-bold\\\">Green: {{ report.casualties.green }}</p> \\r\\n    <p class=\\\"text-dark font-weight-bold\\\">Black: {{ report.casualties.black }}</p> \\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <p><b>Structural Damage: </b> {{ report.structuralDamage }} </p>\\r\\n    <p><b>Fire: </b> {{ report.fire }} </p>\\r\\n    <p><b>Utilities: </b>{{ report.utilities }}</p>\\r\\n    <p><b>Hazmat: </b>{{ report.hazmat }}</p>\\r\\n    <p><b>Others: </b>{{ report.others }}</p>    \\r\\n    <p *ngIf='report.files'><b>Certification: </b><a href={{temp}}>{{ filename }}</a></p>\\r\\n    <p *ngIf='!report.files'><b>Certification: </b>No files uploaded</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n</mat-dialog-content>\\r\\n<hr>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onOk()\\\">OK</button>\\r\\n</mat-dialog-actions>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\r\nimport { Report } from '../common/report';\r\n\r\n@Component({\r\n  selector: 'app-report-dialog',\r\n  templateUrl: './report-dialog.component.html',\r\n  styleUrls: ['./report-dialog.component.css']\r\n})\r\nexport class ReportDialogComponent implements OnInit {\r\n  filename=\"\"\r\n  temp=\"\"\r\n  report: Report;\r\n  constructor(\r\n    public thisDialogRef: MatDialogRef<ReportDialogComponent>, \r\n    @Inject(MAT_DIALOG_DATA) public data: Report,\r\n    public ref: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.report = this.data;\r\n    console.log(this.report);\r\n\r\n     var file=this.report.files;\r\n      var filearr=file.split(\"\\\\\")\r\n      console.log(filearr)\r\n     this.filename=filearr[filearr.length-1]  \r\n    // console.log(\"file is \"+this.user.files)\r\n    this.temp=\"https://drrs.herokuapp.com/certification/\"+this.filename\r\n\r\n  }\r\n\r\n  onOk() {\r\n    this.ref.closeAll();\r\n  }\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.table-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n\\r\\n.filter-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 20px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n\\r\\n.table-header{\\r\\n  font-size: 22px;\\r\\n  color: black;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.table-cell {\\r\\n  font-size: 15px;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for the page -->\\r\\n  <h1>Incident: {{incidentID}}  Reports</h1>\\r\\n  <hr>\\r\\n  <button routerLink = \\\"/createreport\\\" mat-raised-button color=\\\"primary\\\" >Create Report</button>\\r\\n  <br>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n      <!-- Incident Name Column\\r\\n      <ng-container matColumnDef=\\\"incidentName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Incident Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.incidentName}} </td>\\r\\n      </ng-container> -->\\r\\n\\r\\n      <!-- Reported By Column -->\\r\\n      <ng-container matColumnDef=\\\"reportedBy\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Reported By </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.reportedBy}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Structural Damage Column -->\\r\\n      <ng-container matColumnDef=\\\"structuralDamage\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Structural Damage </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.structuralDamage}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Fire Column -->\\r\\n      <ng-container matColumnDef=\\\"fire\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Fire </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.fire}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Utilities Column -->\\r\\n      <ng-container matColumnDef=\\\"utilities\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Utilities </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.utilities}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click) = \\\"rowClicked(row)\\\">\\r\\n      </tr>\\r\\n    </table>\\r\\n    <br>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>      \\r\\n  </div>\\r\\n  \"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { DataService } from '../common/dataService';\r\nimport { Report } from '../common/report';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { ReportDialogComponent } from '../report-dialog/report-dialog.component';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\nexport interface UserData {\r\n  id: string;\r\n  name: string;\r\n  progress: string;\r\n  color: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\n@Component({\r\n  selector: 'app-report',\r\n  templateUrl: './report.component.html',\r\n  styleUrls: ['./report.component.css']\r\n})\r\n\r\nexport class ReportComponent implements OnInit {\r\n  incidentID:string;\r\n  incidentReportClicked:string;\r\n  reports: Report[];\r\n  // displayedColumns: string[] = ['incidentName', 'reportedBy', 'structuralDamage', 'fire', 'utilities'];\r\n  displayedColumns: string[] = [ 'reportedBy', 'structuralDamage', 'fire', 'utilities'];\r\n  dataSource = new MatTableDataSource<Report>(this.reports);\r\n  dialogResult: '';\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  \r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    private router: Router, \r\n    private dataService: DataService,\r\n    public dialog: MatDialog,\r\n    private authService: AuthService) {\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource<Report>(this.reports);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.incidentReportClicked=this.r.get(\"data\")\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.incidentID = paramMap.get('item.incidentID');\r\n      console.log(\"value of incidentID is \"+this.incidentID);\r\n    })\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataService.getReportsList()\r\n    this.dataService.getReportById(this.incidentID)\r\n      .subscribe((data) => {\r\n        this.reports = data['data'];\r\n        this.dataSource = new MatTableDataSource<Report>(this.reports);\r\n      });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  rowClicked(row) {\r\n    // console.log(row);\r\n    const dialogRef = this.dialog.open(ReportDialogComponent, {\r\n      width: '950px',\r\n      height: '600px',\r\n      data: row\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(\"result\");\r\n      this.dialogResult = result;\r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n  report()\r\n  {\r\n    \r\n    // this.router.navigate(['/report', {\r\n      this.router.navigate(['/createreport']\r\n    );\r\n    console.log(\"entered create report \")\r\n\r\n}\r\n}\r\n","module.exports = \"/* Assigned to kishan */\\r\\n.container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n.table-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    min-width: 300px;\\r\\n  }\\r\\n.filter-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n.mat-form-field {\\r\\n  font-size: 20px;\\r\\n  width: 100%;\\r\\n}\\r\\n.mat-table {\\r\\n  overflow: auto;\\r\\n  max-height: 500px;\\r\\n}\\r\\n.table-header{\\r\\n  font-size: 22px;\\r\\n  color: black;\\r\\n  font-weight: bold;\\r\\n}\\r\\n.table-cell {\\r\\n  font-size: 15px;\\r\\n}\\r\\n.buttons {\\r\\n  font-size: 1em;\\r\\n}\\r\\n.button-row button {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n.title {\\r\\n  margin: auto;\\r\\n}\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\"","module.exports = \"<!--\\r\\n  Assigned to Sreevani and kishan\\r\\n -->\\r\\n <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for Review Applications -->\\r\\n<h1 class=\\\"pageHeading mat-display-1\\\">Review Applications</h1>\\r\\n<hr>\\r\\n<div class=\\\"button-row\\\">\\r\\n <button routerLink=\\\"/acceptedApplicants\\\" mat-raised-button color=\\\"primary\\\">Accepted</button>\\r\\n <button routerLink=\\\"/rejectedApplicants\\\" mat-raised-button color=\\\"primary\\\" color=\\\"warn\\\">Rejected</button>\\r\\n</div>\\r\\n<br>\\r\\n<div class=\\\"table-container mat-elevation-z8\\\">\\r\\n  <div class=\\\"filter-header\\\">\\r\\n    <mat-form-field>\\r\\n      <!-- Filter provided to filter the table data -->\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <mat-table #table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- First Name Column -->\\r\\n    <ng-container matColumnDef=\\\"firstName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> First Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.firstName }} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Last Name Column -->\\r\\n    <ng-container matColumnDef=\\\"lastName\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Last Name </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.lastName }} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Email </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.email}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Date of Birth Column -->\\r\\n    <ng-container matColumnDef=\\\"dob\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Date of Birth </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.dob}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- County Column -->\\r\\n    <ng-container matColumnDef=\\\"county\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> County </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.county}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Skills Column -->\\r\\n    <ng-container matColumnDef=\\\"skills\\\">\\r\\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> Skills </mat-header-cell>\\r\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"table-cell\\\"> {{element.skills}} </mat-cell>\\r\\n    </ng-container>\\r\\n\\r\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click) = \\\"rowClicked(row)\\\"></mat-row>\\r\\n  </mat-table>\\r\\n</div>\\r\\n\"","// Assigned to Kishan\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\n// import { applicant } from '../common/mock-applicants'; // for mock user\r\nimport {MatPaginator, MatTableDataSource, MatSort} from '@angular/material';\r\nimport { Applicant } from '../common/applicant';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { DataService } from '../common/dataService';\r\nimport { MatDialog} from '@angular/material';\r\nimport {  MyDialogComponentComponent} from '../my-dialog-component/my-dialog-component.component';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-review-application',\r\n  templateUrl: './review-application.component.html',\r\n  styleUrls: ['./review-application.component.css']\r\n})\r\nexport class ReviewApplicationComponent implements OnInit {\r\n  dialogResult = '';\r\n\r\n  applicants: Applicant[];\r\n  displayedColumns = ['firstName', 'lastName', 'email', 'county', 'skills'];\r\n  dataSource = new  MatTableDataSource<Applicant>(this.applicants);\r\n  selection = new SelectionModel<Applicant>(true, []);\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n\r\n  constructor(private dataService: DataService, public dialog: MatDialog,\r\n    private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataService.getApplicantsList()\r\n      .subscribe((data) => {\r\n        this.applicants = data['data'];\r\n        this.dataSource = new MatTableDataSource<Applicant>(this.applicants);\r\n      });\r\n\r\n  }\r\n\r\n\r\n  // tslint:disable-next-line:use-life-cycle-interface\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  rowClicked(row: any): void {\r\n    console.log(row);\r\n    const dialogRef = this.dialog.open(MyDialogComponentComponent, {\r\n        width: '950px',\r\n        height: '600px',\r\n        data: row\r\n    });\r\n    dialogRef.afterClosed().subscribe(result  => {\r\n        console.log(\"result\");\r\n        this.dialogResult = result;\r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n  \r\n}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .container {\\r\\n    margin-top: 1em;\\r\\n  }\\r\\n\\r\\n  .pageHeading {\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n  .example-container {\\r\\n      margin-top: 1em;\\r\\n      display: flex;\\r\\n      flex-direction: column;\\r\\n      min-width: 300px;\\r\\n    }\\r\\n\\r\\n  .example-header {\\r\\n    min-height: 64px;\\r\\n    padding: 8px 24px 0;\\r\\n  }\\r\\n\\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n  }\\r\\n\\r\\n  .mat-header-cell{\\r\\n    font-size: 22px;\\r\\n    color: black;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n\\r\\n  .title {\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n  .spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n  a {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\n\\r\\n  a.mat-button{\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  \\r\\n  \"","module.exports = \"<!--\\r\\n  Assigned to Chandra Mouli\\r\\n -->\\r\\n <!-- @Author Chandra Mouli Kantipudi -->\\r\\n <!-- Header for team details page -->\\r\\n <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n <div class=\\\"container\\\">\\r\\n <h1 class=\\\"pageHeading mat-display-1\\\"><b>{{ team.teamName }}</b></h1> \\r\\n <hr>\\r\\n <b>Leader:</b> {{ team.leader }}\\r\\n <br>\\r\\n <b>Assistant Leader:</b> {{ team.asstLeader }}\\r\\n <div class=\\\"example-container mat-elevation-z8\\\">\\r\\n <!-- Table is provide with the team members details -->\\r\\n <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <!--- Note that these columns can be defined in any order.\\r\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n    <!-- firstName Column -->\\r\\n    <ng-container matColumnDef=\\\"firstName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- lastName Column -->\\r\\n    <ng-container matColumnDef=\\\"lastName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Email Column -->\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- County Column -->\\r\\n    <ng-container matColumnDef=\\\"county\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> County </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.county}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Skills Column -->\\r\\n    <!-- <ng-container matColumnDef=\\\"skills\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Skills </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.skills}} </td>\\r\\n      </ng-container> -->\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n </div>\\r\\n <br>\\r\\n <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/teamsById', team.incidentID]\\\"> Back </button>\\r\\n  </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TeamsComponent } from '../teams/teams.component';\r\nimport { DataService } from '../common/dataService';\r\nimport { Team } from '../common/team';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { Members } from '../create-teams/create-teams.component';\r\nimport { Applicant } from '../common/applicant';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-team1-details',\r\n  templateUrl: './team1-details.component.html',\r\n  styleUrls: ['./team1-details.component.css']\r\n})\r\nexport class Team1DetailsComponent implements OnInit {\r\n\r\n  team: Team;\r\n  newTeamID: string;\r\n\r\n  displayedColumns: string[] = ['firstName', 'lastName', 'email', 'county'];\r\n  dataSource: Applicant[];\r\n\r\n  constructor(public route: ActivatedRoute, private dataService: DataService,\r\n    private authService: AuthService ) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.newTeamID = paramMap.get('item._id');\r\n      // console.log(this.newTeamID);\r\n    })\r\n    \r\n    this.dataService.getTeamById(this.newTeamID)\r\n      .subscribe((data) => {\r\n        this.team = data['data'];\r\n        console.log(this.team);\r\n        this.dataSource = this.team.members;\r\n      });\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  }\r\n","module.exports = \".button1{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 10px;\\r\\n    \\r\\n}\\r\\n\\r\\n/* .button2{\\r\\n    margin-left: 380px;\\r\\n    \\r\\n} */\\r\\n\\r\\n.text\\r\\n{\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          <b>Do you want to delete the team?</b> \\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"yes(data)\\\">Yes</button>\\r\\n        <button class=\\\"button2\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"no()\\\">No</button>\\r\\n    \\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Team } from '../common/team';\r\nimport { DataService } from '../common/dataService';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-teamdelete',\r\n  templateUrl: './teamdelete.component.html',\r\n  styleUrls: ['./teamdelete.component.css']\r\n})\r\nexport class TeamdeleteComponent implements OnInit {\r\n  id = { _id: String };\r\n  teams: Team[];\r\n  incidentID:string;\r\n  isLoading = false;\r\n  team:Team;\r\n  // constructor(private dataService: DataService, public ref: MatDialog,@Inject(MAT_DIALOG_DATA) public data: Team, public thisMatDialogRef: MatDialogRef<TeamdeleteComponent>) {}\r\n\r\n  constructor(private dataService: DataService, public ref: MatDialog,@Inject(MAT_DIALOG_DATA)  public data:Team, public thisMatDialogRef: MatDialogRef<TeamdeleteComponent>) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    \r\n    this.team=this.data;\r\n    this.teams = this.data['data'];\r\n        this.isLoading = false;\r\n    \r\n  }\r\n\r\n  yes(item)\r\n  {\r\n    this.thisMatDialogRef.close();\r\n      this.id = { _id: item._id };\r\n      console.log(this.id);\r\n      this.dataService.deleteTeam(this.id)\r\n        .subscribe((data) => {\r\n          console.log(data);\r\n          this.dataService.getTeamsById(this.incidentID)\r\n          .subscribe((dataInci) => {\r\n          this.teams = dataInci['data'];\r\n          this.isLoading = false;\r\n        });\r\n          item.isActive = false;\r\n          console.log('success');\r\n        },\r\n          error => {\r\n            console.log('Error Occured');\r\n          });\r\n    }\r\n  \r\n\r\n  \r\n\r\n  no()\r\n  {\r\n     this.ref.closeAll();\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".button1{\\r\\n    margin-left: 200px;\\r\\n    margin-top: 10px;\\r\\n    \\r\\n}\\r\\n\\r\\n/* .button2{\\r\\n    margin-left: 380px;\\r\\n    \\r\\n} */\\r\\n\\r\\n.text\\r\\n{\\r\\n    font-size: 20px;\\r\\n}\"","module.exports = \"\\r\\n<mat-card>\\r\\n  \\r\\n\\r\\n  <mat-card-content>\\r\\n      <div class=\\\"text\\\" style=\\\"text-align:center\\\">\\r\\n          <b>Do you want to create a team?</b> \\r\\n          <br>\\r\\n          \\r\\n        </div>\\r\\n        \\r\\n        <button class=\\\"button1\\\" mat-mini-fab color=\\\"primary\\\" (click)=\\\"yes()\\\">Yes</button>\\r\\n        <button class=\\\"button2\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"no()\\\">No</button>\\r\\n    \\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { CreateTeamsComponent } from '../create-teams/create-teams.component';\r\nimport { Team } from '../common/team';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../common/dataService';\r\n\r\n@Component({\r\n  selector: 'app-teamdialog',\r\n  templateUrl: './teamdialog.component.html',\r\n  styleUrls: ['./teamdialog.component.css']\r\n})\r\nexport class TeamdialogComponent implements OnInit {\r\n\r\n  team: Team;\r\n  constructor(private router: Router, private dataService: DataService, public dialog: MatDialog, public ref: MatDialog,@Inject(MAT_DIALOG_DATA) public thisMatDialogRef: MatDialogRef<TeamdialogComponent>, @Inject(MAT_DIALOG_DATA) public data: Team) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  yes()\r\n  {\r\n    this.team = this.data;\r\n    console.log(this.team);\r\n    // this.team.incidentID =\r\n    this.ref.closeAll();\r\n    // if (valid) {\r\n      this.dataService.saveTeam(this.team)\r\n        .subscribe((data) => {\r\n          console.log(data);\r\n          console.log(this.team);\r\n          console.log('success');\r\n           this.router.navigate(['/teamsById', this.team.incidentID]);\r\n        },\r\n          error => {\r\n            console.log('Error Occured');\r\n          });\r\n    // }\r\n  // }\r\n    // this.ref.open('CreateTeamsComponent');\r\n    \r\n   \r\n  // let dialogReff=this.dialog.open(CreateTeamsComponent,{\r\n    // width:'600px',\r\n    // data:this.user\r\n\r\n  // });\r\n  // dialogReff.afterClosed().subscribe(result=>{\r\n    // console.log('Dialog closed: ${result}');\r\n    // this.dialogResult=result;\r\n  // })\r\n}\r\n\r\n\r\n\r\n  no()\r\n  {\r\n    this.ref.closeAll();\r\n  }\r\n\r\n}\r\n","module.exports = \".container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/* cards */\\r\\n\\r\\n.incident-card {\\r\\n    /* max-width: 235px; */\\r\\n    width: 255px;\\r\\n    min-height: 230px;\\r\\n    max-height: 230x;\\r\\n    margin-top: 2em;\\r\\n}\\r\\n\\r\\n/* for buttons - Create incident and Archived Incidents */\\r\\n\\r\\n.buttons {\\r\\n    font-size: 1em;\\r\\n}\\r\\n\\r\\n/* Describtion height */\\r\\n\\r\\n.p-height{\\r\\n    height: 6em;\\r\\n}\\r\\n\\r\\n.mt-archive{\\r\\n    margin-top: 0.4em;\\r\\n}\\r\\n\\r\\nmat-grid-tile {\\r\\n    background: lightblue;\\r\\n  }\\r\\n\\r\\n.title {\\r\\n    margin: auto;\\r\\n  }\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n\\r\\n.b {\\r\\n    text-decoration: none;\\r\\n    color: white;\\r\\n  }\\r\\n\\r\\na.mat-button{\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  \\r\\n  \\r\\n  \"","module.exports = \"<!-- \\r\\n  Assigned to Chandra Mouli\\r\\n -->\\r\\n <!-- @Author Chandra Mouli Kantipudi -->\\r\\n <mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a class=\\\"b\\\" routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a class=\\\"b\\\" mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a class=\\\"b\\\" mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a class=\\\"b\\\" mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a class=\\\"b\\\" mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n <div class=\\\"container\\\">\\r\\n    <!-- Header for the dashboard page -->\\r\\n <h1 class=\\\"pageHeading mat-display-1\\\">Teams of {{incidentID}}</h1>\\r\\n <hr>\\r\\n <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n <!-- Create team button provided to route to create team page -->\\r\\n <!-- <button [routerLink] = \\\"['createTeamsByID/', incidentID]\\\" mat-raised-button color = \\\"primary\\\" >Create Team</button> -->\\r\\n <button  mat-raised-button color = \\\"primary\\\" [routerLink] = \\\"['/createTeams', incidentID]\\\">Create Team</button>\\r\\n    </div>\\r\\n </div>\\r\\n\\r\\n <br>\\r\\n\\r\\n <div class =\\\"row\\\">\\r\\n   <!-- <mat-spinner *ngIf = \\\"item.isActive\\\"></mat-spinner> -->\\r\\n   <div *ngFor=\\\"let item of teams; let i = index\\\">\\r\\n     <div class=\\\"col-4 text-center\\\" *ngIf = \\\"item.isActive\\\">\\r\\n <!-- The team modules are shown using cards. Card has image of team and team name -->\\r\\n <mat-card *ngIf =\\\"teams.length > 0 && !isLoading\\\" class=\\\"incident-card mat-elevation-z5\\\" >\\r\\n    <!-- Image for team is provided when clicked on image it redirects to the team page -->\\r\\n   <!-- <a [routerLink] = \\\"['/team1Details', item._id]\\\">\\r\\n   <img mat-card-image [src]=\\\"'assets/images/teams/'+ (i%5) +'.jpg'\\\" alt=\\\"Team1\\\">\\r\\n   </a> -->\\r\\n   <mat-card-content >\\r\\n     <!-- Team name -->\\r\\n     <a [routerLink] = \\\"['/team1Details', item._id]\\\">\\r\\n     <h2><b>{{ item.teamName }}</b></h2>\\r\\n     </a>\\r\\n     <p><b>Leader: {{ item.leader }}</b><br>\\r\\n     <b>AsstLeader: {{ item.asstLeader }}</b></p>\\r\\n   </mat-card-content>\\r\\n   <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" [routerLink] = \\\"['/updateTeam', item._id]\\\">Update</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" color=\\\"warn\\\" (click)=\\\"delette(item)\\\">Delete</button>\\r\\n      </mat-card-actions>\\r\\n </mat-card>\\r\\n     </div>\\r\\n   </div>\\r\\n   <p class=\\\"mat-title\\\" *ngIf=\\\"!teams?.length\\\">No Teams are Created for this Incident!</p>\\r\\n </div>\\r\\n </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../common/dataService';\r\nimport { Team } from '../common/team';\r\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { TeamdialogComponent } from '../teamdialog/teamdialog.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { TeamdeleteComponent } from '../teamdelete/teamdelete.component';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-teams',\r\n  templateUrl: './teams.component.html',\r\n  styleUrls: ['./teams.component.css']\r\n})\r\nexport class TeamsComponent implements OnInit {\r\n  id = { _id: String };\r\n  teams: Team[];\r\n  incidentID:string;\r\n  isLoading = false;\r\n  constructor(public route: ActivatedRoute,\r\n    private router: Router, \r\n    private dataService: DataService,\r\n    public dialogref: MatDialog,\r\n    private authService: AuthService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.dataService.getTeamList()\r\n    //   .subscribe((data) => {\r\n    //     this.teams = data['data'];\r\n    //     this.isLoading = false;\r\n    //   });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.incidentID = paramMap.get('item.incidentID');\r\n      console.log(\"value of incidentID is \"+this.incidentID);\r\n    })\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataService.getReportsList()\r\n    this.dataService.getTeamsById(this.incidentID)\r\n      .subscribe((data) => {\r\n        this.teams = data['data'];\r\n        this.isLoading = false;\r\n        console.log(this.teams);\r\n      });\r\n  }\r\n\r\n  onClick(item){\r\n    console.log(item._id);\r\n  }\r\n\r\n  delete(item){\r\n    this.id = { _id: item._id };\r\n    console.log(this.id);\r\n    this.dataService.deleteTeam(this.id)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.dataService.getTeamsById(this.incidentID)\r\n        .subscribe((dataInci) => {\r\n        this.teams = dataInci['data'];\r\n        this.isLoading = false;\r\n      });\r\n        item.isActive = false;\r\n        console.log('success');\r\n      },\r\n        error => {\r\n          console.log('Error Occured');\r\n        });\r\n  }\r\n\r\n  dialogue()\r\n  {\r\n    this.dialogref.open(TeamdialogComponent, {\r\n      width:'600px'\r\n      // data:item\r\n  });\r\n\r\n  }\r\n\r\n  delette(item)\r\n  {\r\n    this.dialogref.open(TeamdeleteComponent, {\r\n      width:'600px',\r\n      data:item\r\n  });\r\n\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n  \r\n}\r\n","module.exports = \".primary{\\r\\n  background: #673ab7;\\r\\n  color: white;\\r\\n  font-size: 1em;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  margin-top: 1em;\\r\\n}\\r\\n\\r\\n.pageHeading {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.table-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\n.filter-header {\\r\\n  min-height: 64px;\\r\\n  padding: 8px 24px 0;\\r\\n}\\r\\n\\r\\n.mat-form-field-filter {\\r\\n  font-size: 20px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.button-row button {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\\r\\n.mat-header-cell {\\r\\n  font-size: 22px;\\r\\n  color: black;\\r\\n  font-weight: bold;\\r\\n  padding: 12px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-cell {\\r\\n  padding: 12px;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\na.mat-button{\\r\\n  font-size: 17px;\\r\\n}\\r\\n\"","module.exports = \"<!--\\r\\n  Assigned to Chandra mouli\\r\\n -->\\r\\n<!-- @Author Chandra Mouli Kantipudi -->\\r\\n<!-- Page not yet completed -->\\r\\n<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z10\\\">\\r\\n    <span class=\\\"title mat-title\\\">\\r\\n      <a routerLink=\\\"/dashboard\\\">DRRS</a>\\r\\n    </span>\\r\\n    <span class=\\\"spacer\\\"></span>\\r\\n    <a mat-button routerLink=\\\"/dashboard\\\" routerLinkActive=\\\"mat-stroked-button\\\">Dashboard</a>\\r\\n    <a mat-button routerLink=\\\"/reviewApplication\\\" routerLinkActive=\\\"mat-stroked-button\\\">Review Application</a>\\r\\n    <a mat-button routerLink=\\\"/cop\\\" routerLinkActive=\\\"mat-stroked-button\\\">Common Operating Picture</a>\\r\\n    <a mat-button (click)=\\\"onLogout()\\\">Logout</a>\\r\\n  </mat-toolbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <!-- Header for the page -->\\r\\n  <h1><b>Update Team</b></h1>\\r\\n  <hr>\\r\\n\\r\\n  <!-- Form to input the team details -->\\r\\n  <form novalidate (ngSubmit)=\\\"onUpdate(updateTeam)\\\" #updateTeam=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"team\\\">\\r\\n          <h3><b>Team Name</b></h3>\\r\\n        </label>\\r\\n      <!--Input for team name -->\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\r\\n      id = \\\"teamName\\\" name =\\\"teamName\\\"\\r\\n      \\r\\n      [(ngModel)]=team.teamName\\r\\n      required\\r\\n          placeholder=\\\"Enter Team Name\\\" required>\\r\\n        <br>\\r\\n\\r\\n      <!-- TeamID should autogenerate -->\\r\\n      <!-- <label for=\\\"teamID\\\">\\r\\n        <b>Team ID :</b>\\r\\n      </label>\\r\\n      {{a}} -->\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-container mat-elevation-z8\\\">\\r\\n      <div class=\\\"filter-header\\\">\\r\\n        <mat-form-field class=\\\"mat-form-field-filter\\\">\\r\\n          <!-- Filter provided to filter the table data -->\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <!-- Table -->\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!--- Note that these columns can be defined in any order.\\r\\n              The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n        <!-- Checkbox Column -->\\r\\n        <ng-container matColumnDef=\\\"select\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\" [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n              [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\">\\r\\n            </mat-checkbox>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n            <mat-checkbox (click)=\\\"$event.stopPropagation()\\\" (change)=\\\"$event ? selection.toggle(row) : null\\\" [checked]=\\\"selection.isSelected(row)\\\">\\r\\n            </mat-checkbox>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- First Name Column\\r\\n      <ng-container matColumnDef=\\\"firstName\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"table-header\\\"> First Name </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName }} </mat-cell>\\r\\n      </ng-container> -->\\r\\n\\r\\n        <!-- First Name Column -->\\r\\n        <ng-container matColumnDef=\\\"firstName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Last Name Column-->\\r\\n        <ng-container matColumnDef=\\\"lastName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"email\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"dob\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Date of Birth </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dob | date }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"county\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> County </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.county}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"skills\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Skills </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.skills}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"selection.toggle(row)\\\">\\r\\n        </tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <br>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"Select Leader\\\" id=\\\"leader\\\" name=\\\"leader\\\" [(ngModel)]=\\\"team.leader\\\" required>\\r\\n        <mat-option *ngFor=\\\"let leader of selection.selected\\\"  [value]=\\\"leader.firstName + leader.lastName\\\">\\r\\n          {{leader.firstName}} {{leader.lastName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <mat-select placeholder=\\\"Select Assistant Leader\\\" id=\\\"asstLeader\\\" name=\\\"asstLeader\\\"  [(ngModel)]=\\\"team.asstLeader\\\"\\r\\n        required>\\r\\n        <mat-option *ngFor=\\\"let asstLeader of selection.selected\\\" [value]=\\\"asstLeader.firstName + asstLeader.lastName\\\">\\r\\n          {{asstLeader.firstName}} {{asstLeader.lastName}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n\\r\\n    <!-- Button provided to create team -->\\r\\n    <!-- <button class=\\\"btn primary\\\"> Create Team</button> -->\\r\\n    <div class=\\\"button-row\\\">\\r\\n      <!-- <button  mat-raised-button color = \\\"primary\\\" (click)=\\\"dialogue()\\\">Create Team</button> -->\\r\\n      <button mat-raised-button color=\\\"primary\\\"> Update </button>\\r\\n      <button mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/teamsById', team.incidentID]\\\"> Cancel </button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { TeamsComponent } from '../teams/teams.component';\r\nimport { DataService } from '../common/dataService';\r\nimport { Team } from '../common/team';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { Members } from '../create-teams/create-teams.component';\r\nimport { Applicant } from '../common/applicant';\r\nimport { TeamdialogComponent } from '../teamdialog/teamdialog.component';\r\nimport { MatTableDataSource, MatDialog } from '@angular/material';\r\nimport { NgForm } from '@angular/forms';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-update-team',\r\n  templateUrl: './update-team.component.html',\r\n  styleUrls: ['./update-team.component.css']\r\n})\r\nexport class UpdateTeamComponent implements OnInit {\r\n  selection = null;\r\n  membersEmails = [];\r\n  inciID: string;\r\n  @ViewChild('updateTeam') updateTeam: NgForm;\r\n  a = Math.floor((Math.random() * 10000) + 1);\r\n  team: Team;\r\n  saveTeam = false;\r\n  applicants: Applicant[];\r\n  newTeamID: string;\r\n\r\n\r\n  displayedColumns = ['select', 'firstName', 'lastName', 'email', 'dob', 'county', 'skills'];\r\n  dataSource = new MatTableDataSource<Applicant>(this.applicants)\r\n\r\n\r\n\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => {\r\n        this.selection.select(row);\r\n        // console.log(row);\r\n      });\r\n    // console.log(this.selection);\r\n\r\n  }\r\n\r\n  constructor(public route: ActivatedRoute,\r\n    private router: Router,\r\n    private dataService: DataService,\r\n    public dialogref: MatDialog,\r\n    private authService: AuthService) {\r\n    this.team = new Team({\r\n      teamID: '',\r\n      members: [],\r\n      leader: '',\r\n      asstLeader: '',\r\n      isActive: false,\r\n      teamName: ''\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.selection = new SelectionModel<Applicant>(true, []);\r\n    this.dataService.getMembersList()\r\n      .subscribe((data) => {\r\n        this.applicants = data['data'];\r\n        this.dataSource = new MatTableDataSource<Applicant>(this.applicants);\r\n        this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n          this.newTeamID = paramMap.get('item._id');\r\n          // console.log(this.newTeamID);\r\n        })\r\n        this.dataService.getTeamById(this.newTeamID)\r\n          .subscribe((data) => {\r\n            this.team = data['data'];\r\n            console.log(this.team);\r\n            for (var i = 0; i < this.team.members.length; i++) {\r\n              // console.log(this.team.members[i].email);\r\n              this.membersEmails.push(this.team.members[i].email);\r\n              // console.log(this.membersEmails)\r\n            }\r\n            console.log(this.membersEmails)\r\n\r\n            let temp = this.applicants.filter(data => {\r\n              return this.membersEmails.indexOf(data.email) !== -1\r\n            })\r\n            console.log(temp)\r\n            this.selection = new SelectionModel<Applicant>(true, temp);\r\n            // this.dataSource = this.team.members;\r\n          });\r\n      });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      this.inciID = paramMap.get('incidentID');\r\n      console.log(\"value of incidentID is \" + this.inciID);\r\n    })\r\n\r\n  }\r\n\r\n  onUpdate() {    // alert(\"Incident module created successfully\");\r\n    // this.router.navigate(['/dashboard']);\r\n    // if(this.saveTeam){\r\n    // this.team.teamID = \"Team\" + this.a;\r\n    this.team.members = this.selection.selected;\r\n    // this.team.isActive = true;\r\n    // this.team.incidentID = this.inciID;\r\n    // this.team.leader = this.updateTeam.value.leader;\r\n    // this.team.asstLeader = this.updateTeam.value.asstLeader;\r\n    // this.team.teamName = this.updateTeam.value.teamName;\r\n    console.log(this.updateTeam.value.teamName);\r\n    console.log(this.team);\r\n    this.dataService.updateTeam(this.team)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        console.log(this.team);\r\n        console.log('success');\r\n        this.router.navigate(['/teamsById', this.team.incidentID]);\r\n      },\r\n        error => {\r\n          console.log('Error Occured');\r\n        });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  // dialogue()\r\n  // {\r\n  //   this.dialogref.open(TeamdialogComponent, {\r\n  //     width:'600px'\r\n  //     // data:item\r\n  // });\r\n  // // this.onCreate(createTeam)\r\n\r\n  // }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n  \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}